{"ast":null,"code":"import _classCallCheck from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/List/List.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './List.module.css';\nimport Card from '../../components/Card/Card';\nimport InputCard from '../InputCard/InputCard';\nimport * as listActions from '../../store/actions/lists';\nimport { DropTarget } from 'react-dnd';\nvar Types = {\n  ITEM: 'card'\n};\nvar cardTarget = {\n  drop: function drop() {}\n};\n\nvar collectDrop = function collectDrop(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget()\n  };\n};\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.findCardHandler = function (id) {\n      var card = _this.props.cards.filter(function (c) {\n        return \"\".concat(c.id) === id;\n      })[0];\n\n      return {\n        card: card,\n        index: _this.props.cards.indexOf(card)\n      };\n    };\n\n    _this.moveCard = function (id, atIndex) {\n      var _this$findCardHandler = _this.findCardHandler(id),\n          card = _this$findCardHandler.card,\n          index = _this$findCardHandler.index;\n\n      console.log(\"WHERE THE FUCK IS THIS TRIGGEREING\");\n\n      _this.props.onCardMovedInList(_this.props.listName, card, index, atIndex);\n    };\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var connectDropTarget = this.props.connectDropTarget;\n      var displayCards = this.props.cards.map(function (cardName, index) {\n        return React.createElement(Card, {\n          key: cardName + index,\n          id: index,\n          cardName: cardName,\n          currentList: _this2.props.listName,\n          findCard: _this2.findCardHandler,\n          moveCard: _this2.moveCard,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      });\n      return connectDropTarget(React.createElement(\"div\", {\n        className: styles.List,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.listName), displayCards, React.createElement(InputCard, {\n        createNewCard: this.props.onCardAdded,\n        cards: this.props.cards,\n        list: this.props.listName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onCardAdded: function onCardAdded(cardName, listName) {\n      return dispatch(listActions.addCard(cardName, listName));\n    },\n    onCardMovedInList: function onCardMovedInList(listName, cardName, currentIndex, newIndex) {\n      return dispatch(listActions.moveCardInList(listName, cardName, currentIndex, newIndex));\n    } // onCardMovedBetweenLists: (cardName, currentList, droppedList) => dispatch(listActions.moveCard(cardName, currentList, droppedList)),\n\n  };\n};\n\nexport default DropTarget(Types.ITEM, cardTarget, collectDrop)(connect(null, mapDispatchToProps)(List));","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/List/List.js"],"names":["React","Component","connect","styles","Card","InputCard","listActions","DropTarget","Types","ITEM","cardTarget","drop","collectDrop","monitor","connectDropTarget","dropTarget","List","findCardHandler","id","card","props","cards","filter","c","index","indexOf","moveCard","atIndex","console","log","onCardMovedInList","listName","displayCards","map","cardName","onCardAdded","mapDispatchToProps","dispatch","addCard","currentIndex","newIndex","moveCardInList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './List.module.css';\nimport Card from '../../components/Card/Card';\nimport InputCard from '../InputCard/InputCard';\nimport * as listActions from '../../store/actions/lists';\n\nimport { DropTarget } from 'react-dnd'\n\nconst Types = {\n    ITEM: 'card'\n}\n\nconst cardTarget = {\n    drop() {}\n}\n\nconst collectDrop = (connect, monitor) => {\n    return {\n        connectDropTarget: connect.dropTarget()\n    }\n}\n\nclass List extends Component {\n\n    findCardHandler = (id) => {\n        const card = this.props.cards.filter(c => `${c.id}` === id)[0]\n        return {\n            card,\n            index: this.props.cards.indexOf(card)\n        }\n    }\n\n    moveCard = (id, atIndex) => {\n        const { card, index } = this.findCardHandler(id)\n        console.log(\"WHERE THE FUCK IS THIS TRIGGEREING\");\n        this.props.onCardMovedInList(this.props.listName, card, index, atIndex)\n    }\n\n\n    render(){\n        const { connectDropTarget } = this.props\n        const displayCards = this.props.cards.map((cardName, index)=> {\n            return (\n                <Card key={cardName+index}\n                        id ={index}\n                        cardName={cardName} \n                        currentList={this.props.listName}\n                        findCard={this.findCardHandler} \n                        moveCard={this.moveCard}/>\n            )\n        })\n        return connectDropTarget(\n            <div className={styles.List}>\n                <h4>{this.props.listName}</h4>\n                {displayCards}\n                <InputCard createNewCard={this.props.onCardAdded} \n                            cards={this.props.cards} \n                            list={this.props.listName}/>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps= dispatch => {\n    return {\n        onCardAdded: (cardName, listName) => dispatch(listActions.addCard(cardName, listName)),\n        onCardMovedInList: (listName, cardName, currentIndex, newIndex) => dispatch(listActions.moveCardInList(listName, cardName, currentIndex, newIndex))\n        // onCardMovedBetweenLists: (cardName, currentList, droppedList) => dispatch(listActions.moveCard(cardName, currentList, droppedList)),\n    }\n}\n\nexport default DropTarget(Types.ITEM, cardTarget, collectDrop)(connect(null, mapDispatchToProps)(List));"]},"metadata":{},"sourceType":"module"}