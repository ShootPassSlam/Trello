{"ast":null,"code":"import _classCallCheck from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/List/List.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './List.module.css';\nimport Card from '../../components/Card/Card';\nimport CardDrop from '../../components/CardDrop/CardDrop';\nimport InputCard from '../InputCard/InputCard';\nimport * as listActions from '../../store/actions/lists';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(List).apply(this, arguments));\n  }\n\n  _createClass(List, [{\n    key: \"handleDrop\",\n    value: function handleDrop(color, shape) {\n      var drops = this.state;\n      console.log(\"drops:\", drops);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var displayCards = this.props.cards.map(function (cardName, index) {\n        return React.createElement(Card, {\n          key: cardName + index,\n          cardName: cardName,\n          onDrop: _this.handleDrop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: styles.List,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.props.listName), displayCards, React.createElement(CardDrop, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(InputCard, {\n        createNewCard: this.props.onCardAdded,\n        cards: this.props.cards,\n        list: this.props.listName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onCardAdded: function onCardAdded(cardName, listName) {\n      return dispatch(listActions.addCard(cardName, listName));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(List);","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/List/List.js"],"names":["React","Component","connect","styles","Card","CardDrop","InputCard","listActions","List","color","shape","drops","state","console","log","displayCards","props","cards","map","cardName","index","handleDrop","listName","onCardAdded","mapDispatchToProps","dispatch","addCard"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,2BAA7B;;IAEMC,I;;;;;;;;;;;;;+BAESC,K,EAAOC,K,EAAO;AACrB,UAAMC,KAAK,GAAI,KAAKC,KAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,KAAtB;AACH;;;6BAEO;AAAA;;AACJ,UAAMI,YAAY,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,QAAD,EAAWC,KAAX,EAAoB;AAC1D,eAAO,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAED,QAAQ,GAACC,KAApB;AAA2B,UAAA,QAAQ,EAAED,QAArC;AAA+C,UAAA,MAAM,EAAE,KAAI,CAACE,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFoB,CAArB;AAIA,aACG;AAAK,QAAA,SAAS,EAAElB,MAAM,CAACK,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKQ,KAAL,CAAWM,QAAhB,CADL,EAEMP,YAFN,EAGK,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHL,EAIK,oBAAC,SAAD;AAAW,QAAA,aAAa,EAAE,KAAKC,KAAL,CAAWO,WAArC;AAAkD,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,KAApE;AAA2E,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWM,QAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJL,CADH;AAQH;;;;EApBcrB,S;;AAuBnB,IAAMuB,kBAAkB,GAAE,SAApBA,kBAAoB,CAAAC,QAAQ,EAAI;AAClC,SAAO;AACHF,IAAAA,WAAW,EAAE,qBAACJ,QAAD,EAAWG,QAAX;AAAA,aAAwBG,QAAQ,CAAClB,WAAW,CAACmB,OAAZ,CAAoBP,QAApB,EAA8BG,QAA9B,CAAD,CAAhC;AAAA;AADV,GAAP;AAGH,CAJD;;AAMA,eAAepB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkChB,IAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './List.module.css';\nimport Card from '../../components/Card/Card';\nimport CardDrop from '../../components/CardDrop/CardDrop';\nimport InputCard from '../InputCard/InputCard';\nimport * as listActions from '../../store/actions/lists';\n\nclass List extends Component {\n\n    handleDrop(color, shape) {\n        const drops  = this.state;\n        console.log(\"drops:\", drops)\n    }\n\n    render(){\n        const displayCards = this.props.cards.map((cardName, index)=> {\n            return <Card key={cardName+index} cardName={cardName} onDrop={this.handleDrop}/>\n        })\n\n        return(\n           <div className={styles.List}>\n                <h4>{this.props.listName}</h4>\n                {displayCards}\n                <CardDrop/>\n                <InputCard createNewCard={this.props.onCardAdded} cards={this.props.cards} list={this.props.listName}/>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps= dispatch => {\n    return {\n        onCardAdded: (cardName, listName) => dispatch(listActions.addCard(cardName, listName))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}