{"ast":null,"code":"import _toConsumableArray from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actionTypes';\nvar initialState = {\n  lists: {\n    1: {\n      name: \"first List\",\n      cards: [{\n        id: 1,\n        text: 'Write a cool JS library'\n      }, {\n        id: 2,\n        text: 'Make it generic enough'\n      }, {\n        id: 3,\n        text: 'Write README'\n      }, {\n        id: 4,\n        text: 'Create some examples'\n      }, {\n        id: 5,\n        text: 'Spam in Twitter and IRC to promote it'\n      }, {\n        id: 6,\n        text: '???'\n      }, {\n        id: 7,\n        text: 'PROFIT'\n      }]\n    }\n  }\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_LIST:\n      return _objectSpread({}, state, {\n        lists: _objectSpread({}, state.lists, _defineProperty({}, action.listName, []))\n      });\n\n    case actionTypes.REMOVE_LIST:\n      return _objectSpread({}, state, {\n        lists: [].concat(_toConsumableArray(state.lists.slice(0, state.lists.indexOf(action.listName))), _toConsumableArray(state.lists.slice(state.lists.indexOf(action.listName) + 1)))\n      });\n\n    case actionTypes.ADD_CARD:\n      var newCard = {\n        id: action.cardsLength,\n        text: action.cardName\n      };\n      return _objectSpread({}, state, {\n        lists: _objectSpread({}, state.lists, _defineProperty({}, action.listName, _toConsumableArray(state.lists[action.listName])))\n      });\n\n    case actionTypes.MOVE_CARD:\n      var updatedList = _objectSpread({}, state.lists[action.listId]);\n\n      var updatedListCards = _toConsumableArray(updatedList.cards);\n\n      updatedListCards.splice(action.newIndex, 0, updatedListCards.splice(action.currentIndex, 1)[0]); // val.splice(to, 0, val.splice(from, 1)[0])\n\n      return _objectSpread({}, state, {\n        lists: _objectSpread({}, state.lists, _defineProperty({}, action.listId, _objectSpread({}, state.lists[action.listId], {\n          cards: updatedListCards\n        })))\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/store/reducers/lists.js"],"names":["actionTypes","initialState","lists","name","cards","id","text","reducer","state","action","type","ADD_LIST","listName","REMOVE_LIST","slice","indexOf","ADD_CARD","newCard","cardsLength","cardName","MOVE_CARD","updatedList","listId","updatedListCards","splice","newIndex","currentIndex"],"mappings":";;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AACH,OAAE;AACEC,MAAAA,IAAI,EAAE,YADR;AAEEC,MAAAA,KAAK,EAAE,CACH;AACIC,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,IAAI,EAAE;AAFV,OADG,EAKH;AACID,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,IAAI,EAAE;AAFV,OALG,EASH;AACID,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,IAAI,EAAE;AAFV,OATG,EAaH;AACID,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,IAAI,EAAE;AAFV,OAbG,EAiBH;AACID,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,IAAI,EAAE;AAFV,OAjBG,EAqBH;AACID,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,IAAI,EAAE;AAFV,OArBG,EAyBH;AACID,QAAAA,EAAE,EAAE,CADR;AAEIC,QAAAA,IAAI,EAAE;AAFV,OAzBG;AAFT;AADC;AADU,CAArB;;AAsCA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA+B;AAAA,MAA9BC,KAA8B,uEAAxBP,YAAwB;AAAA,MAAVQ,MAAU;;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,WAAW,CAACW,QAAjB;AACI,+BACOH,KADP;AAEIN,QAAAA,KAAK,oBACEM,KAAK,CAACN,KADR,sBAEAO,MAAM,CAACG,QAFP,EAEkB,EAFlB;AAFT;;AAOJ,SAAKZ,WAAW,CAACa,WAAjB;AACI,+BACOL,KADP;AAEIN,QAAAA,KAAK,+BACEM,KAAK,CAACN,KAAN,CAAYY,KAAZ,CAAkB,CAAlB,EAAqBN,KAAK,CAACN,KAAN,CAAYa,OAAZ,CAAoBN,MAAM,CAACG,QAA3B,CAArB,CADF,sBAEEJ,KAAK,CAACN,KAAN,CAAYY,KAAZ,CAAkBN,KAAK,CAACN,KAAN,CAAYa,OAAZ,CAAoBN,MAAM,CAACG,QAA3B,IAAqC,CAAvD,CAFF;AAFT;;AAOJ,SAAKZ,WAAW,CAACgB,QAAjB;AACI,UAAMC,OAAO,GAAG;AAACZ,QAAAA,EAAE,EAAEI,MAAM,CAACS,WAAZ;AAAyBZ,QAAAA,IAAI,EAAEG,MAAM,CAACU;AAAtC,OAAhB;AACA,+BACOX,KADP;AAEIN,QAAAA,KAAK,oBACEM,KAAK,CAACN,KADR,sBAEDO,MAAM,CAACG,QAFN,qBAGMJ,KAAK,CAACN,KAAN,CAAYO,MAAM,CAACG,QAAnB,CAHN;AAFT;;AASJ,SAAKZ,WAAW,CAACoB,SAAjB;AACI,UAAMC,WAAW,qBAAOb,KAAK,CAACN,KAAN,CAAYO,MAAM,CAACa,MAAnB,CAAP,CAAjB;;AACA,UAAMC,gBAAgB,sBAAOF,WAAW,CAACjB,KAAnB,CAAtB;;AACAmB,MAAAA,gBAAgB,CAACC,MAAjB,CAAwBf,MAAM,CAACgB,QAA/B,EAAyC,CAAzC,EAA4CF,gBAAgB,CAACC,MAAjB,CAAwBf,MAAM,CAACiB,YAA/B,EAA6C,CAA7C,EAAgD,CAAhD,CAA5C,EAHJ,CAII;;AACA,+BACOlB,KADP;AAEIN,QAAAA,KAAK,oBACEM,KAAK,CAACN,KADR,sBAEAO,MAAM,CAACa,MAFP,oBAGMd,KAAK,CAACN,KAAN,CAAYO,MAAM,CAACa,MAAnB,CAHN;AAIGlB,UAAAA,KAAK,EAAEmB;AAJV;AAFT;;AAUJ;AACI,aAAOf,KAAP;AA5CR;AA8CH,CA/CD;;AAiDA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    lists: {\n        1:{\n            name: \"first List\",\n            cards: [\n                {\n                    id: 1,\n                    text: 'Write a cool JS library',\n                },\n                {\n                    id: 2,\n                    text: 'Make it generic enough',\n                },\n                {\n                    id: 3,\n                    text: 'Write README',\n                },\n                {\n                    id: 4,\n                    text: 'Create some examples',\n                },\n                {\n                    id: 5,\n                    text: 'Spam in Twitter and IRC to promote it',\n                },\n                {\n                    id: 6,\n                    text: '???',\n                },\n                {\n                    id: 7,\n                    text: 'PROFIT',\n                }\n            ]\n        }\n    }\n};\n\nconst reducer = (state=initialState, action) =>{\n    switch(action.type){\n        case actionTypes.ADD_LIST:\n            return{\n                ...state,\n                lists: {\n                    ...state.lists, \n                    [action.listName]: []\n                }\n            };\n        case actionTypes.REMOVE_LIST:\n            return{\n                ...state,\n                lists:  [\n                    ...state.lists.slice(0, state.lists.indexOf(action.listName)),\n                    ...state.lists.slice(state.lists.indexOf(action.listName)+1)\n                ]\n            };\n        case actionTypes.ADD_CARD:\n            const newCard = {id: action.cardsLength, text: action.cardName}\n            return{\n                ...state,\n                lists: {\n                    ...state.lists,\n                   [action.listName]: [\n                        ...state.lists[action.listName]\n                    ]\n                }\n            };\n        case actionTypes.MOVE_CARD:\n            const updatedList = {...state.lists[action.listId]}\n            const updatedListCards = [...updatedList.cards]\n            updatedListCards.splice(action.newIndex, 0, updatedListCards.splice(action.currentIndex, 1)[0])\n            // val.splice(to, 0, val.splice(from, 1)[0])\n            return{\n                ...state,\n                lists: {\n                    ...state.lists,\n                    [action.listId]:{\n                        ...state.lists[action.listId],\n                        cards: updatedListCards\n                    }\n                }\n            };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}