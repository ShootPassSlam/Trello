{"ast":null,"code":"import _classCallCheck from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/components/CardDrop/CardDrop.js\";\nimport React, { Component } from 'react';\nimport styles from './CardDrop.module.css';\nimport { DropTarget, ConnectDropTarget, DropTargetMonitor } from 'react-dnd';\nvar Types = {\n  ITEM: 'toy'\n};\n\nvar collect = function collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOverCurrent: monitor.isOver({\n      shallow: true\n    })\n  };\n};\n\nvar box = {\n  drop: function drop(props, component) {\n    if (!component) {\n      return;\n    }\n\n    component.setState({\n      hasDropped: true\n    });\n    var droppedList = props.droppedList;\n    return {\n      droppedList: droppedList\n    };\n  }\n};\n\nvar CardDrop =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardDrop, _Component);\n\n  function CardDrop() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardDrop);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardDrop)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      hasDropped: false\n    };\n    return _this;\n  }\n\n  _createClass(CardDrop, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isOverCurrent = _this$props.isOverCurrent,\n          connectDropTarget = _this$props.connectDropTarget;\n      return connectDropTarget(React.createElement(\"div\", {\n        className: isOverCurrent ? styles.CardDrop : styles.CardDropDragging,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.state.hasDropped));\n    }\n  }]);\n\n  return CardDrop;\n}(Component);\n\nexport default DropTarget(Types.ITEM, box, collect)(CardDrop);","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/components/CardDrop/CardDrop.js"],"names":["React","Component","styles","DropTarget","ConnectDropTarget","DropTargetMonitor","Types","ITEM","collect","connect","monitor","connectDropTarget","dropTarget","isOverCurrent","isOver","shallow","box","drop","props","component","setState","hasDropped","droppedList","CardDrop","state","CardDropDragging"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,SAASC,UAAT,EAAqBC,iBAArB,EAAwCC,iBAAxC,QAAiE,WAAjE;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE;AADI,CAAd;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAAUC,OAAV,EAAsB;AAClC,SAAO;AACHC,IAAAA,iBAAiB,EAAEF,OAAO,CAACG,UAAR,EADhB;AAEHC,IAAAA,aAAa,EAAEH,OAAO,CAACI,MAAR,CAAe;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAf;AAFZ,GAAP;AAIH,CALD;;AAQA,IAAMC,GAAG,GAAG;AACRC,EAAAA,IADQ,gBACFC,KADE,EACKC,SADL,EACwC;AAC5C,QAAI,CAACA,SAAL,EAAgB;AACZ;AACH;;AAEDA,IAAAA,SAAS,CAACC,QAAV,CAAmB;AACfC,MAAAA,UAAU,EAAE;AADG,KAAnB;AAIA,QAAMC,WAAW,GAAGJ,KAAK,CAACI,WAA1B;AACA,WAAQ;AACJA,MAAAA,WAAW,EAAXA;AADI,KAAR;AAIH;AAfO,CAAZ;;IAkBMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAM;AACFH,MAAAA,UAAU,EAAE;AADV,K;;;;;;6BAIG;AAAA,wBACsC,KAAKH,KAD3C;AAAA,UACEL,aADF,eACEA,aADF;AAAA,UACiBF,iBADjB,eACiBA,iBADjB;AAGL,aAAOA,iBAAiB,CACpB;AAAK,QAAA,SAAS,EAAEE,aAAa,GAAGX,MAAM,CAACqB,QAAV,GAAoBrB,MAAM,CAACuB,gBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWH,UADhB,CADoB,CAAxB;AAKH;;;;EAbkBpB,S;;AAevB,eAAeE,UAAU,CAACG,KAAK,CAACC,IAAP,EAAaS,GAAb,EAAkBR,OAAlB,CAAV,CAAqCe,QAArC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport styles from './CardDrop.module.css';\n\nimport { DropTarget, ConnectDropTarget, DropTargetMonitor } from 'react-dnd'\n\nconst Types = {\n    ITEM: 'toy'\n}\n\nconst collect = (connect, monitor) => {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOverCurrent: monitor.isOver({ shallow: true })\n    }\n}\n\n\nconst box = {\n    drop( props, component: React.Component | null) {\n        if (!component) {\n            return\n        }\n\n        component.setState({\n            hasDropped: true\n        })\n\n        const droppedList = props.droppedList;\n        return ({\n            droppedList\n        });\n\n    }\n}\n\nclass CardDrop extends Component {\n    state={\n        hasDropped: false\n    }\n\n    render() {\n        const {isOverCurrent, connectDropTarget} = this.props\n\n        return connectDropTarget(\n            <div className={isOverCurrent ? styles.CardDrop: styles.CardDropDragging}>\n                {this.state.hasDropped}\n            </div>\n        )\n    }\n}\nexport default DropTarget(Types.ITEM, box, collect)(CardDrop)"]},"metadata":{},"sourceType":"module"}