{"ast":null,"code":"import _classCallCheck from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/components/Card/Card.js\";\nimport React, { Component } from 'react';\nimport styles from './Card.module.css';\nimport { DragSource } from 'react-dnd';\nvar Types = {\n  ITEM: 'toy'\n};\ncontainer.onmouseover = container.onmouseout = handler;\n\nfunction handler(event) {\n  function str(el) {\n    if (!el) return \"null\";\n    return el.className || el.tagName;\n  }\n\n  log.value += event.type + ': ' + 'target=' + str(event.target) + ', relatedTarget=' + str(event.relatedTarget) + \"\\n\";\n  log.scrollTop = log.scrollHeight;\n  console.log();\n}\n\nvar itemSource = {\n  beginDrag: function beginDrag(props) {\n    return {};\n  },\n  endDrag: function endDrag(props, monitor, component) {\n    if (!monitor.didDrop()) {\n      return;\n    }\n\n    var moveCardToList = props.moveCardToList;\n    var cardName = props.cardName;\n    var currentList = props.currentList;\n    var droppedList = monitor.getDropResult().droppedList;\n\n    if (currentList !== droppedList) {\n      moveCardToList(cardName, currentList, droppedList);\n    }\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    _classCallCheck(this, Card);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Card).apply(this, arguments));\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isDragging = _this$props.isDragging,\n          connectDragSource = _this$props.connectDragSource;\n      return connectDragSource(React.createElement(\"div\", {\n        className: isDragging ? styles.CardDragging : styles.Card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.props.cardName));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\nexport default DragSource(Types.ITEM, itemSource, collect)(Card);","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/components/Card/Card.js"],"names":["React","Component","styles","DragSource","Types","ITEM","container","onmouseover","onmouseout","handler","event","str","el","className","tagName","log","value","type","target","relatedTarget","scrollTop","scrollHeight","console","itemSource","beginDrag","props","endDrag","monitor","component","didDrop","moveCardToList","cardName","currentList","droppedList","getDropResult","collect","connect","connectDragSource","dragSource","isDragging","Card","CardDragging"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,WAA3B;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE;AADI,CAAd;AAIAC,SAAS,CAACC,WAAV,GAAwBD,SAAS,CAACE,UAAV,GAAuBC,OAA/C;;AAEA,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAEtB,WAASC,GAAT,CAAaC,EAAb,EAAiB;AACf,QAAI,CAACA,EAAL,EAAS,OAAO,MAAP;AACT,WAAOA,EAAE,CAACC,SAAH,IAAgBD,EAAE,CAACE,OAA1B;AACD;;AAEDC,EAAAA,GAAG,CAACC,KAAJ,IAAaN,KAAK,CAACO,IAAN,GAAa,IAAb,GACX,SADW,GACCN,GAAG,CAACD,KAAK,CAACQ,MAAP,CADJ,GAEX,kBAFW,GAEUP,GAAG,CAACD,KAAK,CAACS,aAAP,CAFb,GAEqC,IAFlD;AAGAJ,EAAAA,GAAG,CAACK,SAAJ,GAAgBL,GAAG,CAACM,YAApB;AACAC,EAAAA,OAAO,CAACP,GAAR;AACD;;AAED,IAAMQ,UAAU,GAAG;AACfC,EAAAA,SADe,qBACLC,KADK,EACE;AACb,WAAO,EAAP;AACH,GAHc;AAIfC,EAAAA,OAJe,mBAIPD,KAJO,EAIAE,OAJA,EAISC,SAJT,EAIoB;AAC/B,QAAI,CAACD,OAAO,CAACE,OAAR,EAAL,EAAwB;AACpB;AACH;;AAH8B,QAIvBC,cAJuB,GAIJL,KAJI,CAIvBK,cAJuB;AAK/B,QAAMC,QAAQ,GAAGN,KAAK,CAACM,QAAvB;AACA,QAAMC,WAAW,GAAGP,KAAK,CAACO,WAA1B;AACA,QAAMC,WAAW,GAAGN,OAAO,CAACO,aAAR,GAAwBD,WAA5C;;AACA,QAAGD,WAAW,KAAKC,WAAnB,EAA+B;AAC3BH,MAAAA,cAAc,CAACC,QAAD,EAAWC,WAAX,EAAwBC,WAAxB,CAAd;AACH;AACJ;AAfc,CAAnB;;AAkBA,SAASE,OAAT,CAAiBC,OAAjB,EAA0BT,OAA1B,EAAmC;AAC/B,SAAO;AACHU,IAAAA,iBAAiB,EAAED,OAAO,CAACE,UAAR,EADhB;AAEHC,IAAAA,UAAU,EAAEZ,OAAO,CAACY,UAAR;AAFT,GAAP;AAIH;;IAEMC,I;;;;;;;;;;;;;6BAEO;AAAA,wBACmC,KAAKf,KADxC;AAAA,UACEc,UADF,eACEA,UADF;AAAA,UACcF,iBADd,eACcA,iBADd;AAEN,aAAOA,iBAAiB,CACpB;AACI,QAAA,SAAS,EAAEE,UAAU,GAAGrC,MAAM,CAACuC,YAAV,GAAwBvC,MAAM,CAACsC,IADxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,KAAKf,KAAL,CAAWM,QAFZ,CADoB,CAAxB;AAKF;;;;EATc9B,S;;AAYpB,eAAeE,UAAU,CAACC,KAAK,CAACC,IAAP,EAAakB,UAAb,EAAyBY,OAAzB,CAAV,CAA4CK,IAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Card.module.css';\n\nimport { DragSource } from 'react-dnd';\n\nconst Types = {\n    ITEM: 'toy'\n}\n\ncontainer.onmouseover = container.onmouseout = handler;\n\nfunction handler(event) {\n\n  function str(el) {\n    if (!el) return \"null\"\n    return el.className || el.tagName;\n  }\n\n  log.value += event.type + ': ' +\n    'target=' + str(event.target) +\n    ', relatedTarget=' + str(event.relatedTarget) + \"\\n\";\n  log.scrollTop = log.scrollHeight;\n  console.log()\n}\n\nconst itemSource = {\n    beginDrag(props) {\n        return {};\n    },\n    endDrag(props, monitor, component) {\n        if (!monitor.didDrop()) {\n            return;\n        }\n        const { moveCardToList } = props;\n        const cardName = props.cardName;\n        const currentList = props.currentList;\n        const droppedList = monitor.getDropResult().droppedList;\n        if(currentList !== droppedList){\n            moveCardToList(cardName, currentList, droppedList);\n        }\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\n class Card extends Component {\n\n     render() {\n        const { isDragging, connectDragSource} = this.props\n        return connectDragSource(\n            <div \n                className={isDragging ? styles.CardDragging: styles.Card}>\n            {this.props.cardName}</div>\n        )\n     }\n}\n\nexport default DragSource(Types.ITEM, itemSource, collect)(Card)"]},"metadata":{},"sourceType":"module"}