{"ast":null,"code":"import _classCallCheck from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/Lists/Lists.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './Lists.module.css';\nimport List from '../List/List';\nimport InputList from '../InputList/InputList';\nimport * as listActions from '../../store/actions/lists';\n\nvar Lists =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Lists, _Component);\n\n  function Lists() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Lists);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Lists)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lists: {} // updateCardState = (cardName, listName) => {\n      //     let newCards={...this.props.lists};\n      //     newCards[listName].push(cardName);\n      //     this.setState({cards: newCards});\n      // }\n\n    };\n    return _this;\n  }\n\n  _createClass(Lists, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var displayLists = Object.keys(this.props.lists).map(function (listKeys) {\n        return React.createElement(List, {\n          key: listKeys,\n          listName: listKeys,\n          cards: _this2.props.lists[listKeys],\n          createNewCard: function createNewCard(cardName, listName) {\n            return _this2.updateCardState(cardName, listName);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: styles.Lists,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, displayLists, React.createElement(InputList, {\n        createNewList: this.props.onListAdded,\n        lists: this.props.lists,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Lists;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    lists: state.lists\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onListAdded: function onListAdded(listName) {\n      return dispatch(listActions.addList(listName));\n    },\n    onListRemoved: function onListRemoved(listName) {\n      return dispatch(listActions.removeList(listName));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lists);","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/Lists/Lists.js"],"names":["React","Component","connect","styles","List","InputList","listActions","Lists","state","lists","displayLists","Object","keys","props","map","listKeys","cardName","listName","updateCardState","onListAdded","mapStateToProps","mapDispatchToProps","dispatch","addList","onListRemoved","removeList"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,2BAA7B;;IAEMC,K;;;;;;;;;;;;;;;;;UACFC,K,GAAM;AACFC,MAAAA,KAAK,EAAE,EADL,CAIN;AACA;AACA;AACA;AACA;;AARM,K;;;;;;6BAUE;AAAA;;AACJ,UAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWJ,KAAvB,EAA8BK,GAA9B,CAAmC,UAAAC,QAAQ,EAAI;AAC5D,eAAO,oBAAC,IAAD;AACH,UAAA,GAAG,EAAEA,QADF;AAEH,UAAA,QAAQ,EAAEA,QAFP;AAGH,UAAA,KAAK,EAAE,MAAI,CAACF,KAAL,CAAWJ,KAAX,CAAiBM,QAAjB,CAHJ;AAIH,UAAA,aAAa,EAAE,uBAACC,QAAD,EAAWC,QAAX;AAAA,mBAAuB,MAAI,CAACC,eAAL,CAAqBF,QAArB,EAA+BC,QAA/B,CAAvB;AAAA,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,OANgB,CAArB;AAQA,aACI;AAAK,QAAA,SAAS,EAAEd,MAAM,CAACI,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKG,YADL,EAEI,oBAAC,SAAD;AAAW,QAAA,aAAa,EAAE,KAAKG,KAAL,CAAWM,WAArC;AAAkD,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWJ,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EA1BeR,S;;AA6BpB,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAAAZ,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADV,GAAP;AAGH,CAJD;;AAKA,IAAMY,kBAAkB,GAAE,SAApBA,kBAAoB,CAAAC,QAAQ,EAAI;AAClC,SAAO;AACHH,IAAAA,WAAW,EAAE,qBAACF,QAAD;AAAA,aAAcK,QAAQ,CAAChB,WAAW,CAACiB,OAAZ,CAAoBN,QAApB,CAAD,CAAtB;AAAA,KADV;AAEHO,IAAAA,aAAa,EAAE,uBAACP,QAAD;AAAA,aAAcK,QAAQ,CAAChB,WAAW,CAACmB,UAAZ,CAAuBR,QAAvB,CAAD,CAAtB;AAAA;AAFZ,GAAP;AAIH,CALD;;AAOA,eAAef,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cd,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './Lists.module.css';\nimport List from '../List/List';\nimport InputList from '../InputList/InputList';\nimport * as listActions from '../../store/actions/lists';\n\nclass Lists extends Component {\n    state={\n        lists: {}\n    }\n\n    // updateCardState = (cardName, listName) => {\n    //     let newCards={...this.props.lists};\n    //     newCards[listName].push(cardName);\n    //     this.setState({cards: newCards});\n    // }\n\n    render(){\n        const displayLists = Object.keys(this.props.lists).map( listKeys => {\n                return <List \n                    key={listKeys} \n                    listName={listKeys} \n                    cards={this.props.lists[listKeys]} \n                    createNewCard={(cardName, listName)=> this.updateCardState(cardName, listName)}/>;\n            })\n\n        return(\n            <div className={styles.Lists}>\n                {displayLists}\n                <InputList createNewList={this.props.onListAdded} lists={this.props.lists}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        lists: state.lists,\n    };\n}\nconst mapDispatchToProps= dispatch => {\n    return {\n        onListAdded: (listName) => dispatch(listActions.addList(listName)),\n        onListRemoved: (listName) => dispatch(listActions.removeList(listName))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lists);"]},"metadata":{},"sourceType":"module"}