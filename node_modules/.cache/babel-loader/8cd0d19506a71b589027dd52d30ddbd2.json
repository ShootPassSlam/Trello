{"ast":null,"code":"import _classCallCheck from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/InputCard/InputCard.js\";\nimport React, { Component } from 'react';\nimport styles from './InputCard.module.css';\nimport Aux from '../../hoc/Aux';\n\nvar InputCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputCard, _Component);\n\n  function InputCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InputCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InputCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cardName: \"\",\n      inputActive: false\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        cardName: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.createNewCard(_this.state.cardName);\n\n      _this.setState({\n        cardName: \"\"\n      });\n    };\n\n    _this.inputActiveHandler = function () {\n      _this.setState({\n        inputActive: true\n      });\n    };\n\n    _this.handleClickOutside = function (event) {\n      if (_this.wrapperRef && !_this.wrapperRef.contains(event.target)) {\n        _this.setState({\n          inputActive: false\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(InputCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('mousedown', this.handleClickOutside);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formIsValid = this.state.cardName.length > 0;\n      var listText = Object.keys(this.props.cards).length > 0 ? '+ Add another card' : '+ Add a card';\n      var form = React.createElement(\"div\", {\n        ref: function ref(node) {\n          _this2.wrapperRef = node;\n        },\n        className: styles.InputCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: function ref(inputEl) {\n          _this2.inputRef = inputEl;\n        },\n        type: \"text\",\n        value: this.state.cardName,\n        onChange: this.handleChange,\n        placeholder: \"Enter card title...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        disabled: !formIsValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Add Card\")));\n\n      if (!this.state.inputActive) {\n        form = React.createElement(\"button\", {\n          onClick: this.inputActiveHandler,\n          className: styles.InputCardButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, listText);\n      }\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, form);\n    }\n  }]);\n\n  return InputCard;\n}(Component);\n\nexport default InputCard;","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/InputCard/InputCard.js"],"names":["React","Component","styles","Aux","InputCard","state","cardName","inputActive","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","createNewCard","inputActiveHandler","handleClickOutside","wrapperRef","contains","document","addEventListener","removeEventListener","formIsValid","length","listText","Object","keys","cards","form","node","inputEl","inputRef","InputCardButton"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport styles from './InputCard.module.css';\nimport Aux from '../../hoc/Aux';\n\nclass InputCard extends Component{\n    state={\n        cardName: \"\",\n        inputActive: false\n    }\n\n    handleChange = event => {\n        this.setState({cardName: event.target.value});\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.createNewCard(this.state.cardName);\n        this.setState({cardName: \"\"});\n    }\n\n    inputActiveHandler = () => {\n        this.setState({inputActive: true});\n    }\n\n    handleClickOutside = (event) => {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.setState({inputActive: false});\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    render (){\n        const formIsValid = this.state.cardName.length > 0\n        const listText = Object.keys(this.props.cards).length> 0 ? '+ Add another card' : '+ Add a card';\n        let form  = (\n            <div ref={node => { this.wrapperRef = node; }} className={styles.InputCard}>\n                <form onSubmit={this.handleSubmit}>\n                    <input ref={inputEl => { this.inputRef = inputEl; }} type=\"text\" value={this.state.cardName} onChange={this.handleChange} placeholder=\"Enter card title...\"/>\n                    <button  disabled={!formIsValid}>Add Card</button>\n                </form>\n            </div>   \n        );\n\n        if(!this.state.inputActive){\n            form = <button onClick={this.inputActiveHandler} className={styles.InputCardButton}>{listText}</button>\n        }\n\n        return(\n            <Aux>\n                {form}\n            </Aux>\n        );\n    }\n}\n\nexport default InputCard;"]},"metadata":{},"sourceType":"module"}