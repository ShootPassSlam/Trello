{"ast":null,"code":"// import * as React from 'react'\n// import { DropTarget } from 'react-dnd'\n// import Card from '../../components/Card/Card'\n// import InputCard from '../InputCard/InputCard';\n// import { connect } from 'react-redux';\n// import * as listActions from '../../store/actions/lists';\n// import styles from './List.module.css';\n// const Types = {\n//     ITEM: 'card'\n// }\n// const cardTarget = {\n//     drop() {}\n// }\n// const collectDrop = (connect, monitor) =>{\n//     return {\n//         connectDropTarget: connect.dropTarget()\n//     }\n// }\n// class List extends React.Component{\n//     render() {\n//         const { connectDropTarget } = this.props\n//         const displayCards = Object.keys(this.props.cards).map( cardKeys => {\n//             return (\n//                 <Card key={cardKeys}\n//                         id ={this.props.cards[cardKeys].id}\n//                         cardName={this.props.cards[cardKeys].text} \n//                         listId={this.props.listId}\n//                         moveCard={this.moveCard}\n//                         findCard={this.findCard}/>\n//             )\n//         })\n//         return connectDropTarget(\n//             <div className={styles.List}>\n//                 <h4>{this.props.listName}</h4>\n//                 {displayCards}\n//                 <InputCard createNewCard={this.props.onCardAdded} \n//                             cards={this.props.cards} \n//                             list={this.props.listName}/>\n//             </div>\n//         )\n//     }\n//     moveCard = (currentList, id, atIndex) => {\n//         const { card, index } = this.findCard(id)\n//         console.log(\"index:\", index);\n//         this.props.onCardMovedInList(currentList, card, index, atIndex);\n//     }\n//     findCard = (id) => {\n//         const { cards } = this.props\n//         const card = cards.filter(c => `${c.id}` === String(id))[0]\n//         return {\n//             card,\n//             index: cards.indexOf(card),\n//         }\n//     }\n// }\n// const mapDispatchToProps= dispatch => {\n//     return {\n//         onCardAdded: (cardName, listName) => dispatch(listActions.addCard(cardName, listName)),\n//         onCardMovedInList: (listId, cardName, currentIndex, newIndex) => dispatch(listActions.moveCardInList(listId, cardName, currentIndex, newIndex))\n//         // onCardMovedBetweenLists: (cardName, currentList, droppedList) => dispatch(listActions.moveCard(cardName, currentList, droppedList)),\n//     }\n// }\n// export default DropTarget(Types.ITEM, cardTarget, collectDrop)(connect(null, mapDispatchToProps)(List))","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/List/List.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import * as React from 'react'\n// import { DropTarget } from 'react-dnd'\n// import Card from '../../components/Card/Card'\n// import InputCard from '../InputCard/InputCard';\n// import { connect } from 'react-redux';\n// import * as listActions from '../../store/actions/lists';\n// import styles from './List.module.css';\n\n// const Types = {\n//     ITEM: 'card'\n// }\n\n// const cardTarget = {\n//     drop() {}\n// }\n\n// const collectDrop = (connect, monitor) =>{\n//     return {\n//         connectDropTarget: connect.dropTarget()\n//     }\n// }\n\n// class List extends React.Component{\n\n//     render() {\n//         const { connectDropTarget } = this.props\n//         const displayCards = Object.keys(this.props.cards).map( cardKeys => {\n//             return (\n//                 <Card key={cardKeys}\n//                         id ={this.props.cards[cardKeys].id}\n//                         cardName={this.props.cards[cardKeys].text} \n//                         listId={this.props.listId}\n//                         moveCard={this.moveCard}\n//                         findCard={this.findCard}/>\n//             )\n//         })\n//         return connectDropTarget(\n//             <div className={styles.List}>\n//                 <h4>{this.props.listName}</h4>\n//                 {displayCards}\n//                 <InputCard createNewCard={this.props.onCardAdded} \n//                             cards={this.props.cards} \n//                             list={this.props.listName}/>\n//             </div>\n//         )\n//     }\n\n//     moveCard = (currentList, id, atIndex) => {\n//         const { card, index } = this.findCard(id)\n//         console.log(\"index:\", index);\n//         this.props.onCardMovedInList(currentList, card, index, atIndex);\n//     }\n\n//     findCard = (id) => {\n//         const { cards } = this.props\n//         const card = cards.filter(c => `${c.id}` === String(id))[0]\n\n//         return {\n//             card,\n//             index: cards.indexOf(card),\n//         }\n//     }\n// }\n\n// const mapDispatchToProps= dispatch => {\n//     return {\n//         onCardAdded: (cardName, listName) => dispatch(listActions.addCard(cardName, listName)),\n//         onCardMovedInList: (listId, cardName, currentIndex, newIndex) => dispatch(listActions.moveCardInList(listId, cardName, currentIndex, newIndex))\n//         // onCardMovedBetweenLists: (cardName, currentList, droppedList) => dispatch(listActions.moveCard(cardName, currentList, droppedList)),\n//     }\n// }\n\n// export default DropTarget(Types.ITEM, cardTarget, collectDrop)(connect(null, mapDispatchToProps)(List))"]},"metadata":{},"sourceType":"module"}