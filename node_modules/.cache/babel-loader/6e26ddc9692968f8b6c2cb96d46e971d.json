{"ast":null,"code":"import _classCallCheck from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/components/Card/Card.js\";\nimport React, { Component } from 'react';\nimport styles from './Card.module.css';\nimport { DragSource } from 'react-dnd';\nvar Types = {\n  ITEM: 'toy'\n};\nvar itemSource = {\n  beginDrag: function beginDrag(props) {\n    this.draggedCard.addEventListener('mouseover', this.mouseLog);\n    return {};\n  },\n  endDrag: function endDrag(props, monitor, component) {\n    if (!monitor.didDrop()) {\n      return;\n    }\n\n    var moveCardToList = props.moveCardToList;\n    var cardName = props.cardName;\n    var currentList = props.currentList;\n    var droppedList = monitor.getDropResult().droppedList;\n\n    if (currentList !== droppedList) {\n      moveCardToList(cardName, currentList, droppedList);\n    }\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    _classCallCheck(this, Card);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Card).apply(this, arguments));\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          isDragging = _this$props.isDragging,\n          connectDragSource = _this$props.connectDragSource;\n      return connectDragSource(React.createElement(\"div\", {\n        ref: function ref(node) {\n          _this.draggedCard = node;\n        },\n        className: isDragging ? styles.CardDragging : styles.Card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.props.cardName));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\nexport default DragSource(Types.ITEM, itemSource, collect)(Card);","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/components/Card/Card.js"],"names":["React","Component","styles","DragSource","Types","ITEM","itemSource","beginDrag","props","draggedCard","addEventListener","mouseLog","endDrag","monitor","component","didDrop","moveCardToList","cardName","currentList","droppedList","getDropResult","collect","connect","connectDragSource","dragSource","isDragging","Card","node","CardDragging"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,WAA3B;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE;AADI,CAAd;AAKA,IAAMC,UAAU,GAAG;AACfC,EAAAA,SADe,qBACLC,KADK,EACE;AACb,SAAKC,WAAL,CAAiBC,gBAAjB,CAAkC,WAAlC,EAA+C,KAAKC,QAApD;AACA,WAAO,EAAP;AACH,GAJc;AAKfC,EAAAA,OALe,mBAKPJ,KALO,EAKAK,OALA,EAKSC,SALT,EAKoB;AAC/B,QAAI,CAACD,OAAO,CAACE,OAAR,EAAL,EAAwB;AACpB;AACH;;AAH8B,QAIvBC,cAJuB,GAIJR,KAJI,CAIvBQ,cAJuB;AAK/B,QAAMC,QAAQ,GAAGT,KAAK,CAACS,QAAvB;AACA,QAAMC,WAAW,GAAGV,KAAK,CAACU,WAA1B;AACA,QAAMC,WAAW,GAAGN,OAAO,CAACO,aAAR,GAAwBD,WAA5C;;AACA,QAAGD,WAAW,KAAKC,WAAnB,EAA+B;AAC3BH,MAAAA,cAAc,CAACC,QAAD,EAAWC,WAAX,EAAwBC,WAAxB,CAAd;AACH;AACJ;AAhBc,CAAnB;;AAmBA,SAASE,OAAT,CAAiBC,OAAjB,EAA0BT,OAA1B,EAAmC;AAC/B,SAAO;AACHU,IAAAA,iBAAiB,EAAED,OAAO,CAACE,UAAR,EADhB;AAEHC,IAAAA,UAAU,EAAEZ,OAAO,CAACY,UAAR;AAFT,GAAP;AAIH;;IAEKC,I;;;;;;;;;;;;;6BAEO;AAAA;;AAAA,wBACoC,KAAKlB,KADzC;AAAA,UACGiB,UADH,eACGA,UADH;AAAA,UACeF,iBADf,eACeA,iBADf;AAEL,aAAOA,iBAAiB,CACpB;AAAK,QAAA,GAAG,EAAE,aAAAI,IAAI,EAAI;AAAE,UAAA,KAAI,CAAClB,WAAL,GAAmBkB,IAAnB;AAA0B,SAA9C;AAAgD,QAAA,SAAS,EAAEF,UAAU,GAAGvB,MAAM,CAAC0B,YAAV,GAAwB1B,MAAM,CAACwB,IAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKlB,KAAL,CAAWS,QADZ,CADoB,CAAxB;AAIH;;;;EARchB,S;;AAWnB,eAAeE,UAAU,CAACC,KAAK,CAACC,IAAP,EAAaC,UAAb,EAAyBe,OAAzB,CAAV,CAA4CK,IAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Card.module.css';\n\nimport { DragSource } from 'react-dnd';\n\nconst Types = {\n    ITEM: 'toy'\n}\n\n\nconst itemSource = {\n    beginDrag(props) {\n        this.draggedCard.addEventListener('mouseover', this.mouseLog);\n        return {};\n    },\n    endDrag(props, monitor, component) {\n        if (!monitor.didDrop()) {\n            return;\n        }\n        const { moveCardToList } = props;\n        const cardName = props.cardName;\n        const currentList = props.currentList;\n        const droppedList = monitor.getDropResult().droppedList;\n        if(currentList !== droppedList){\n            moveCardToList(cardName, currentList, droppedList);\n        }\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\nclass Card extends Component {\n\n    render() {\n        const { isDragging, connectDragSource} = this.props\n        return connectDragSource(\n            <div ref={node => { this.draggedCard = node; }} className={isDragging ? styles.CardDragging: styles.Card}>\n            {this.props.cardName}</div>\n        )\n    }\n}\n\nexport default DragSource(Types.ITEM, itemSource, collect)(Card)"]},"metadata":{},"sourceType":"module"}