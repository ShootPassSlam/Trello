{"ast":null,"code":"import _classCallCheck from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/List/List.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './List.module.css';\nimport Card from '../../components/Card/Card';\nimport InputCard from '../InputCard/InputCard';\nimport * as listActions from '../../store/actions/lists';\nimport { DropTarget } from 'react-dnd';\nvar Types = {\n  ITEM: 'card'\n};\nvar cardTarget = {\n  drop: function drop() {}\n};\n\nvar collectDrop = function collectDrop(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget()\n  };\n};\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.findCardHandler = function () {};\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var connectDropTarget = this.props.connectDropTarget;\n      var displayCards = this.props.cards.map(function (cardName, index) {\n        return React.createElement(Card, {\n          key: cardName + index,\n          cardName: cardName,\n          currentList: _this2.props.listName,\n          findCard: _this2.props.findCardHandler,\n          moveCard: _this2.props.onCardMoved,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      });\n      return connectDropTarget(React.createElement(\"div\", {\n        className: styles.List,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.props.listName), displayCards, React.createElement(InputCard, {\n        createNewCard: this.props.onCardAdded,\n        cards: this.props.cards,\n        list: this.props.listName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onCardAdded: function onCardAdded(cardName, listName) {\n      return dispatch(listActions.addCard(cardName, listName));\n    },\n    onCardMoved: function onCardMoved(cardName, currentList, droppedList) {\n      return dispatch(listActions.moveCard(cardName, currentList, droppedList));\n    }\n  };\n};\n\nexport default DropTarget(Types.ITEM, cardTarget, collectDrop)(connect(null, mapDispatchToProps)(List));","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/List/List.js"],"names":["React","Component","connect","styles","Card","InputCard","listActions","DropTarget","Types","ITEM","cardTarget","drop","collectDrop","monitor","connectDropTarget","dropTarget","List","findCardHandler","props","displayCards","cards","map","cardName","index","listName","onCardMoved","onCardAdded","mapDispatchToProps","dispatch","addCard","currentList","droppedList","moveCard"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,2BAA7B;AAEA,SAASC,UAAT,QAA2B,WAA3B;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE;AADI,CAAd;AAIA,IAAMC,UAAU,GAAG;AACfC,EAAAA,IADe,kBACR,CAAE;AADM,CAAnB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACV,OAAD,EAAUW,OAAV,EAAsB;AACtC,SAAO;AACHC,IAAAA,iBAAiB,EAAEZ,OAAO,CAACa,UAAR;AADhB,GAAP;AAGH,CAJD;;IAMMC,I;;;;;;;;;;;;;;;;;;UAEFC,e,GAAkB,YAAK,CAEtB,C;;;;;;;6BAEO;AAAA;;AAAA,UACIH,iBADJ,GAC0B,KAAKI,KAD/B,CACIJ,iBADJ;AAEJ,UAAMK,YAAY,GAAG,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,QAAD,EAAWC,KAAX,EAAoB;AAC1D,eACI,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAED,QAAQ,GAACC,KAApB;AACQ,UAAA,QAAQ,EAAED,QADlB;AAEQ,UAAA,WAAW,EAAE,MAAI,CAACJ,KAAL,CAAWM,QAFhC;AAGQ,UAAA,QAAQ,EAAE,MAAI,CAACN,KAAL,CAAWD,eAH7B;AAIQ,UAAA,QAAQ,EAAE,MAAI,CAACC,KAAL,CAAWO,WAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,OARoB,CAArB;AASA,aAAOX,iBAAiB,CACpB;AAAK,QAAA,SAAS,EAAEX,MAAM,CAACa,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKE,KAAL,CAAWM,QAAhB,CADJ,EAEKL,YAFL,EAGI,oBAAC,SAAD;AAAW,QAAA,aAAa,EAAE,KAAKD,KAAL,CAAWQ,WAArC;AACY,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,KAD9B;AAEY,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWM,QAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADoB,CAAxB;AASH;;;;EA1BcvB,S;;AA6BnB,IAAM0B,kBAAkB,GAAE,SAApBA,kBAAoB,CAAAC,QAAQ,EAAI;AAClC,SAAO;AACHF,IAAAA,WAAW,EAAE,qBAACJ,QAAD,EAAWE,QAAX;AAAA,aAAwBI,QAAQ,CAACtB,WAAW,CAACuB,OAAZ,CAAoBP,QAApB,EAA8BE,QAA9B,CAAD,CAAhC;AAAA,KADV;AAEHC,IAAAA,WAAW,EAAE,qBAACH,QAAD,EAAWQ,WAAX,EAAwBC,WAAxB;AAAA,aAAwCH,QAAQ,CAACtB,WAAW,CAAC0B,QAAZ,CAAqBV,QAArB,EAA+BQ,WAA/B,EAA4CC,WAA5C,CAAD,CAAhD;AAAA;AAFV,GAAP;AAIH,CALD;;AAOA,eAAexB,UAAU,CAACC,KAAK,CAACC,IAAP,EAAaC,UAAb,EAAyBE,WAAzB,CAAV,CAAgDV,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCX,IAAlC,CAAhD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './List.module.css';\nimport Card from '../../components/Card/Card';\nimport InputCard from '../InputCard/InputCard';\nimport * as listActions from '../../store/actions/lists';\n\nimport { DropTarget } from 'react-dnd'\n\nconst Types = {\n    ITEM: 'card'\n}\n\nconst cardTarget = {\n    drop() {}\n}\n\nconst collectDrop = (connect, monitor) => {\n    return {\n        connectDropTarget: connect.dropTarget()\n    }\n}\n\nclass List extends Component {\n\n    findCardHandler = () =>{\n\n    }\n\n    render(){\n        const { connectDropTarget } = this.props\n        const displayCards = this.props.cards.map((cardName, index)=> {\n            return (\n                <Card key={cardName+index}\n                        cardName={cardName} \n                        currentList={this.props.listName}\n                        findCard={this.props.findCardHandler} \n                        moveCard={this.props.onCardMoved}/>\n            )\n        })\n        return connectDropTarget(\n            <div className={styles.List}>\n                <h4>{this.props.listName}</h4>\n                {displayCards}\n                <InputCard createNewCard={this.props.onCardAdded} \n                            cards={this.props.cards} \n                            list={this.props.listName}/>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps= dispatch => {\n    return {\n        onCardAdded: (cardName, listName) => dispatch(listActions.addCard(cardName, listName)),\n        onCardMoved: (cardName, currentList, droppedList) => dispatch(listActions.moveCard(cardName, currentList, droppedList)),\n    }\n}\n\nexport default DropTarget(Types.ITEM, cardTarget, collectDrop)(connect(null, mapDispatchToProps)(List));"]},"metadata":{},"sourceType":"module"}