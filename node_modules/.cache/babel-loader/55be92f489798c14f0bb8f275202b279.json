{"ast":null,"code":"import _classCallCheck from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/InputList/InputList.js\";\nimport React, { Component } from 'react';\nimport styles from './InputList.module.css';\nimport Aux from '../../hoc/Aux';\n\nvar InputList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputList, _Component);\n\n  function InputList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InputList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InputList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      listName: \"\",\n      inputActive: false\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        listName: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.createNewList(_this.state.listName);\n\n      _this.setState({\n        listName: \"\"\n      });\n    };\n\n    _this.inputActiveHandler = function () {\n      _this.setState({\n        inputActive: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(InputList, [{\n    key: \"render\",\n    value: function render() {\n      var formIsValid = this.state.listName.length > 0;\n      var form = React.createElement(\"button\", {\n        onClick: this.inputActiveHandler,\n        className: styles.InputListButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"+ Add another list\");\n\n      if (this.inputActive) {\n        form = React.createElement(\"div\", {\n          className: styles.InputList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          value: this.state.listName,\n          onChange: this.handleChange,\n          placeholder: \"Enter list title...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          disabled: !formIsValid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Add List\")));\n      }\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, form);\n    }\n  }]);\n\n  return InputList;\n}(Component);\n\nexport default InputList;","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/InputList/InputList.js"],"names":["React","Component","styles","Aux","InputList","state","listName","inputActive","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","createNewList","inputActiveHandler","formIsValid","length","form","InputListButton"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;IAEMC,S;;;;;;;;;;;;;;;;;UACFC,K,GAAM;AACFC,MAAAA,QAAQ,EAAE,EADR;AAEFC,MAAAA,WAAW,EAAE;AAFX,K;;UAKNC,Y,GAAe,UAAAC,KAAK,EAAI;AACpB,YAAKC,QAAL,CAAc;AAACJ,QAAAA,QAAQ,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAAxB,OAAd;AACH,K;;UAEDC,Y,GAAe,UAAAJ,KAAK,EAAI;AACpBA,MAAAA,KAAK,CAACK,cAAN;;AACA,YAAKC,KAAL,CAAWC,aAAX,CAAyB,MAAKX,KAAL,CAAWC,QAApC;;AACA,YAAKI,QAAL,CAAc;AAACJ,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACH,K;;UAEDW,kB,GAAqB,YAAM;AAEvB,YAAKP,QAAL,CAAc;AAACH,QAAAA,WAAW,EAAE;AAAd,OAAd;AACH,K;;;;;;;6BAEQ;AACL,UAAMW,WAAW,GAAG,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,MAApB,GAA6B,CAAjD;AACA,UAAIC,IAAI,GAAG;AAAQ,QAAA,OAAO,EAAE,KAAKH,kBAAtB;AAA0C,QAAA,SAAS,EAAEf,MAAM,CAACmB,eAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAX;;AAEA,UAAG,KAAKd,WAAR,EAAoB;AAChBa,QAAAA,IAAI,GAAK;AAAK,UAAA,SAAS,EAAElB,MAAM,CAACE,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AAAM,UAAA,QAAQ,EAAE,KAAKS,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,QAArC;AAA+C,UAAA,QAAQ,EAAE,KAAKE,YAA9D;AAA4E,UAAA,WAAW,EAAC,qBAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAS,UAAA,QAAQ,EAAE,CAACU,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADH,CAAT;AAMH;;AAED,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,IADL,CADJ;AAKH;;;;EAvCmBnB,S;;AA0CxB,eAAeG,SAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport styles from './InputList.module.css';\nimport Aux from '../../hoc/Aux';\n\nclass InputList extends Component{\n    state={\n        listName: \"\",\n        inputActive: false\n    }\n\n    handleChange = event => {\n        this.setState({listName: event.target.value});\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.createNewList(this.state.listName);\n        this.setState({listName: \"\"});\n    }\n\n    inputActiveHandler = () => {\n        \n        this.setState({inputActive: true});\n    };\n\n    render (){\n        const formIsValid = this.state.listName.length > 0\n        let form = <button onClick={this.inputActiveHandler} className={styles.InputListButton}>+ Add another list</button>\n\n        if(this.inputActive){\n            form  = (<div className={styles.InputList}>\n                        <form onSubmit={this.handleSubmit}>\n                            <input type=\"text\" value={this.state.listName} onChange={this.handleChange} placeholder=\"Enter list title...\"/>\n                            <button  disabled={!formIsValid}>Add List</button>\n                        </form>\n                    </div>)\n        }\n\n        return(\n            <Aux>\n                {form}\n            </Aux>\n        );\n    }\n}\n\nexport default InputList;"]},"metadata":{},"sourceType":"module"}