{"ast":null,"code":"import _classCallCheck from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/components/Card/Card.js\";\nimport React, { Component } from 'react';\nimport styles from './Card.module.css';\nimport { DragSource } from 'react-dnd';\nvar Types = {\n  ITEM: 'toy'\n};\nvar itemSource = {\n  beginDrag: function beginDrag(props) {\n    console.log(props);\n    return {};\n  },\n  endDrag: function endDrag(props) {\n    console.log(props);\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nvar Toy =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Toy, _Component);\n\n  function Toy() {\n    _classCallCheck(this, Toy);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Toy).apply(this, arguments));\n  }\n\n  _createClass(Toy, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isDragging = _this$props.isDragging,\n          connectDragSource = _this$props.connectDragSource,\n          src = _this$props.src;\n      return connectDragSource(React.createElement(\"div\", {\n        className: styles.Card,\n        style: {\n          backgroundColor: color,\n          opacity: isDragging ? 0.25 : 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.props.cardName));\n    }\n  }]);\n\n  return Toy;\n}(Component);\n\nexport default DragSource(Types.ITEM, itemSource, collect)(Toy);","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/components/Card/Card.js"],"names":["React","Component","styles","DragSource","Types","ITEM","itemSource","beginDrag","props","console","log","endDrag","collect","connect","monitor","connectDragSource","dragSource","isDragging","Toy","src","Card","backgroundColor","color","opacity","cardName"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,WAA3B;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE;AADI,CAAd;AAIA,IAAMC,UAAU,GAAG;AACfC,EAAAA,SADe,qBACLC,KADK,EACE;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO,EAAP;AACH,GAJc;AAKfG,EAAAA,OALe,mBAKPH,KALO,EAKA;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAPc,CAAnB;;AAUA,SAASI,OAAT,CAAiBC,OAAjB,EAA0BC,OAA1B,EAAmC;AAC/B,SAAO;AACHC,IAAAA,iBAAiB,EAAEF,OAAO,CAACG,UAAR,EADhB;AAEHC,IAAAA,UAAU,EAAEH,OAAO,CAACG,UAAR;AAFT,GAAP;AAIH;;IAEMC,G;;;;;;;;;;;;;6BACO;AAAA,wBACyC,KAAKV,KAD9C;AAAA,UACES,UADF,eACEA,UADF;AAAA,UACcF,iBADd,eACcA,iBADd;AAAA,UACiCI,GADjC,eACiCA,GADjC;AAEL,aAAOJ,iBAAiB,CACrB;AACI,QAAA,SAAS,EAAEb,MAAM,CAACkB,IADtB;AAEI,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAEC,KAAlB;AACCC,UAAAA,OAAO,EAAEN,UAAU,GAAG,IAAH,GAAU;AAD9B,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIC,KAAKT,KAAL,CAAWgB,QAJZ,CADqB,CAAxB;AAOH;;;;EAVavB,S;;AAanB,eAAeE,UAAU,CAACC,KAAK,CAACC,IAAP,EAAaC,UAAb,EAAyBM,OAAzB,CAAV,CAA4CM,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Card.module.css';\n\nimport { DragSource } from 'react-dnd';\n\nconst Types = {\n    ITEM: 'toy'\n}\n\nconst itemSource = {\n    beginDrag(props) {\n        console.log(props)\n        return {};\n    },\n    endDrag(props) {\n        console.log(props)\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\n class Toy extends Component {\n     render() {\n        const { isDragging, connectDragSource, src } = this.props\n         return connectDragSource(\n            <div \n                className={styles.Card}\n                style={{backgroundColor: color,\n                        opacity: isDragging ? 0.25 : 1,}}>\n            {this.props.cardName}</div>\n         )\n     }\n}\n\nexport default DragSource(Types.ITEM, itemSource, collect)(Toy)"]},"metadata":{},"sourceType":"module"}