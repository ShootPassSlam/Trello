{"ast":null,"code":"import _classCallCheck from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/List/List.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './List.module.css';\nimport Card from '../../components/Card/Card';\nimport CardDrop from '../../components/CardDrop/CardDrop';\nimport InputCard from '../InputCard/InputCard';\nimport * as listActions from '../../store/actions/lists';\nimport Aux from '../../hoc/Aux';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(List).apply(this, arguments));\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var displayCards = this.props.cards.map(function (cardName, index) {\n        return React.createElement(Aux, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(Card, {\n          key: cardName + index,\n          cardName: cardName,\n          currentList: _this.props.listName,\n          moveCardToList: _this.props.onCardMoved,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }), React.createElement(CardDrop, {\n          droppedList: _this.props.listName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        className: styles.List,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.listName), displayCards, React.createElement(InputCard, {\n        createNewCard: this.props.onCardAdded,\n        cards: this.props.cards,\n        list: this.props.listName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onCardAdded: function onCardAdded(cardName, listName) {\n      return dispatch(listActions.addCard(cardName, listName));\n    },\n    onCardMoved: function onCardMoved(cardName, currentList, droppedList) {\n      return dispatch(listActions.moveCard(cardName, currentList, droppedList));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(List);","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/containers/List/List.js"],"names":["React","Component","connect","styles","Card","CardDrop","InputCard","listActions","Aux","List","displayCards","props","cards","map","cardName","index","listName","onCardMoved","onCardAdded","mapDispatchToProps","dispatch","addCard","currentList","droppedList","moveCard"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,2BAA7B;AACA,OAAOC,GAAP,MAAgB,eAAhB;;IAEMC,I;;;;;;;;;;;;;6BAEM;AAAA;;AACJ,UAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,QAAD,EAAWC,KAAX,EAAoB;AAC1D,eACI,oBAAC,GAAD;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAED,QAAQ,GAACC,KAApB;AACQ,UAAA,QAAQ,EAAED,QADlB;AAEQ,UAAA,WAAW,EAAE,KAAI,CAACH,KAAL,CAAWK,QAFhC;AAGQ,UAAA,cAAc,EAAE,KAAI,CAACL,KAAL,CAAWM,WAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,EAKA,oBAAC,QAAD;AAAU,UAAA,WAAW,EAAE,KAAI,CAACN,KAAL,CAAWK,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALA,CADJ;AASH,OAVoB,CAArB;AAWA,aACI;AAAK,QAAA,SAAS,EAAEb,MAAM,CAACM,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKE,KAAL,CAAWK,QAAhB,CADJ,EAEKN,YAFL,EAGI,oBAAC,SAAD;AAAW,QAAA,aAAa,EAAE,KAAKC,KAAL,CAAWO,WAArC;AACY,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,KAD9B;AAEY,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWK,QAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AASH;;;;EAvBcf,S;;AA0BnB,IAAMkB,kBAAkB,GAAE,SAApBA,kBAAoB,CAAAC,QAAQ,EAAI;AAClC,SAAO;AACHF,IAAAA,WAAW,EAAE,qBAACJ,QAAD,EAAWE,QAAX;AAAA,aAAwBI,QAAQ,CAACb,WAAW,CAACc,OAAZ,CAAoBP,QAApB,EAA8BE,QAA9B,CAAD,CAAhC;AAAA,KADV;AAEHC,IAAAA,WAAW,EAAE,qBAACH,QAAD,EAAWQ,WAAX,EAAwBC,WAAxB;AAAA,aAAwCH,QAAQ,CAACb,WAAW,CAACiB,QAAZ,CAAqBV,QAArB,EAA+BQ,WAA/B,EAA4CC,WAA5C,CAAD,CAAhD;AAAA;AAFV,GAAP;AAIH,CALD;;AAOA,eAAerB,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCV,IAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './List.module.css';\nimport Card from '../../components/Card/Card';\nimport CardDrop from '../../components/CardDrop/CardDrop';\nimport InputCard from '../InputCard/InputCard';\nimport * as listActions from '../../store/actions/lists';\nimport Aux from '../../hoc/Aux';\n\nclass List extends Component {\n\n    render(){\n        const displayCards = this.props.cards.map((cardName, index)=> {\n            return (\n                <Aux key={index}>\n                <Card key={cardName+index}\n                        cardName={cardName} \n                        currentList={this.props.listName} \n                        moveCardToList={this.props.onCardMoved}/>\n                <CardDrop droppedList={this.props.listName}/>\n                </Aux>\n            )\n        })\n        return(\n            <div className={styles.List}>\n                <h4>{this.props.listName}</h4>\n                {displayCards}\n                <InputCard createNewCard={this.props.onCardAdded} \n                            cards={this.props.cards} \n                            list={this.props.listName}/>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps= dispatch => {\n    return {\n        onCardAdded: (cardName, listName) => dispatch(listActions.addCard(cardName, listName)),\n        onCardMoved: (cardName, currentList, droppedList) => dispatch(listActions.moveCard(cardName, currentList, droppedList)),\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(List);"]},"metadata":{},"sourceType":"module"}