{"ast":null,"code":"import _classCallCheck from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/components/Card/Card.js\";\nimport React, { Component } from 'react';\nimport styles from './Card.module.css';\nimport { DragSource } from 'react-dnd';\nvar Types = {\n  ITEM: 'toy'\n};\nvar itemSource = {\n  beginDrag: function beginDrag(props) {\n    return {};\n  },\n  endDrag: function endDrag(props, monitor, component) {\n    var currentList = props.console.log(\"monitor:\", monitor.getDropResult());\n    console.log(\"CURRENT LIST:\", props); // moveCardToList(item.id, dropResult.listId);\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nvar Toy =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Toy, _Component);\n\n  function Toy() {\n    _classCallCheck(this, Toy);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Toy).apply(this, arguments));\n  }\n\n  _createClass(Toy, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isDragging = _this$props.isDragging,\n          connectDragSource = _this$props.connectDragSource,\n          src = _this$props.src;\n      return connectDragSource(React.createElement(\"div\", {\n        className: isDragging ? styles.CardDragging : styles.Card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.props.cardName));\n    }\n  }]);\n\n  return Toy;\n}(Component);\n\nexport default DragSource(Types.ITEM, itemSource, collect)(Toy);","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/components/Card/Card.js"],"names":["React","Component","styles","DragSource","Types","ITEM","itemSource","beginDrag","props","endDrag","monitor","component","currentList","console","log","getDropResult","collect","connect","connectDragSource","dragSource","isDragging","Toy","src","CardDragging","Card","cardName"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,WAA3B;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE;AADI,CAAd;AAIA,IAAMC,UAAU,GAAG;AACfC,EAAAA,SADe,qBACLC,KADK,EACE;AACb,WAAO,EAAP;AACH,GAHc;AAIfC,EAAAA,OAJe,mBAIPD,KAJO,EAIAE,OAJA,EAISC,SAJT,EAIoB;AAC/B,QAAMC,WAAW,GAAGJ,KAAK,CACzBK,OADoB,CACZC,GADY,CACR,UADQ,EACIJ,OAAO,CAACK,aAAR,EADJ,CAApB;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,KAA7B,EAH+B,CAI/B;AACH;AATc,CAAnB;;AAYA,SAASQ,OAAT,CAAiBC,OAAjB,EAA0BP,OAA1B,EAAmC;AAC/B,SAAO;AACHQ,IAAAA,iBAAiB,EAAED,OAAO,CAACE,UAAR,EADhB;AAEHC,IAAAA,UAAU,EAAEV,OAAO,CAACU,UAAR;AAFT,GAAP;AAIH;;IAEMC,G;;;;;;;;;;;;;6BACO;AAAA,wBACyC,KAAKb,KAD9C;AAAA,UACEY,UADF,eACEA,UADF;AAAA,UACcF,iBADd,eACcA,iBADd;AAAA,UACiCI,GADjC,eACiCA,GADjC;AAEN,aAAOJ,iBAAiB,CACpB;AACI,QAAA,SAAS,EAAEE,UAAU,GAAGlB,MAAM,CAACqB,YAAV,GAAwBrB,MAAM,CAACsB,IADxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,KAAKhB,KAAL,CAAWiB,QAFZ,CADoB,CAAxB;AAKF;;;;EARaxB,S;;AAWnB,eAAeE,UAAU,CAACC,KAAK,CAACC,IAAP,EAAaC,UAAb,EAAyBU,OAAzB,CAAV,CAA4CK,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport styles from './Card.module.css';\n\nimport { DragSource } from 'react-dnd';\n\nconst Types = {\n    ITEM: 'toy'\n}\n\nconst itemSource = {\n    beginDrag(props) {\n        return {};\n    },\n    endDrag(props, monitor, component) {\n        const currentList = props.\n        console.log(\"monitor:\", monitor.getDropResult());\n        console.log(\"CURRENT LIST:\", props)\n        // moveCardToList(item.id, dropResult.listId);\n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\n class Toy extends Component {\n     render() {\n        const { isDragging, connectDragSource, src } = this.props\n        return connectDragSource(\n            <div \n                className={isDragging ? styles.CardDragging: styles.Card}>\n            {this.props.cardName}</div>\n        )\n     }\n}\n\nexport default DragSource(Types.ITEM, itemSource, collect)(Toy)"]},"metadata":{},"sourceType":"module"}