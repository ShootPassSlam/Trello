{"ast":null,"code":"import _toConsumableArray from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actionTypes';\nvar initialState = {\n  lists: {}\n};\n\nvar reducer = function reducer() {\n  var _objectSpread4;\n\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_LIST:\n      return _objectSpread({}, state, {\n        lists: _objectSpread({}, state.lists, _defineProperty({}, action.listName, []))\n      });\n\n    case actionTypes.REMOVE_LIST:\n      return _objectSpread({}, state, {\n        lists: [].concat(_toConsumableArray(state.lists.slice(0, state.lists.indexOf(action.listName))), _toConsumableArray(state.lists.slice(state.lists.indexOf(action.listName) + 1)))\n      });\n\n    case actionTypes.ADD_CARD:\n      return _objectSpread({}, state, {\n        lists: _objectSpread({}, state.lists, _defineProperty({}, action.listName, [].concat(_toConsumableArray(state.lists[action.listName]), [action.cardName])))\n      });\n\n    case actionTypes.MOVE_CARD:\n      var updatedList = _toConsumableArray(state[lists][action.listName]);\n\n      updatedList.splice(2, 0, action.cardName);\n      return _objectSpread({}, state, {\n        lists: _objectSpread({}, state.lists, (_objectSpread4 = {}, _defineProperty(_objectSpread4, action.listName, [].concat(_toConsumableArray(state.lists[action.droppedList]), [action.cardName])), _defineProperty(_objectSpread4, action.listName, [].concat(_toConsumableArray(state.lists[action.currentList].slice(0, state.lists[action.currentList].indexOf(action.cardName))), _toConsumableArray(state.lists[action.currentList].slice(state.lists[action.currentList].indexOf(action.cardName) + 1)))), _objectSpread4))\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/dominicscotto/Desktop/Portfolio/react_rest/trello/src/store/reducers/lists.js"],"names":["actionTypes","initialState","lists","reducer","state","action","type","ADD_LIST","listName","REMOVE_LIST","slice","indexOf","ADD_CARD","cardName","MOVE_CARD","updatedList","splice","droppedList","currentList"],"mappings":";;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA+B;AAAA;;AAAA,MAA9BC,KAA8B,uEAAxBH,YAAwB;AAAA,MAAVI,MAAU;;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,WAAW,CAACO,QAAjB;AACI,+BACOH,KADP;AAEIF,QAAAA,KAAK,oBACEE,KAAK,CAACF,KADR,sBAEAG,MAAM,CAACG,QAFP,EAEkB,EAFlB;AAFT;;AAOJ,SAAKR,WAAW,CAACS,WAAjB;AACI,+BACOL,KADP;AAEIF,QAAAA,KAAK,+BACEE,KAAK,CAACF,KAAN,CAAYQ,KAAZ,CAAkB,CAAlB,EAAqBN,KAAK,CAACF,KAAN,CAAYS,OAAZ,CAAoBN,MAAM,CAACG,QAA3B,CAArB,CADF,sBAEEJ,KAAK,CAACF,KAAN,CAAYQ,KAAZ,CAAkBN,KAAK,CAACF,KAAN,CAAYS,OAAZ,CAAoBN,MAAM,CAACG,QAA3B,IAAqC,CAAvD,CAFF;AAFT;;AAOJ,SAAKR,WAAW,CAACY,QAAjB;AACI,+BACOR,KADP;AAEIF,QAAAA,KAAK,oBACEE,KAAK,CAACF,KADR,sBAEDG,MAAM,CAACG,QAFN,+BAGMJ,KAAK,CAACF,KAAN,CAAYG,MAAM,CAACG,QAAnB,CAHN,IAIGH,MAAM,CAACQ,QAJV;AAFT;;AAUJ,SAAKb,WAAW,CAACc,SAAjB;AACI,UAAMC,WAAW,sBAAOX,KAAK,CAACF,KAAD,CAAL,CAAaG,MAAM,CAACG,QAApB,CAAP,CAAjB;;AACAO,MAAAA,WAAW,CAACC,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBX,MAAM,CAACQ,QAAhC;AACA,+BACOT,KADP;AAEIF,QAAAA,KAAK,oBACEE,KAAK,CAACF,KADR,wDAEAG,MAAM,CAACG,QAFP,+BAGMJ,KAAK,CAACF,KAAN,CAAYG,MAAM,CAACY,WAAnB,CAHN,IAIGZ,MAAM,CAACQ,QAJV,qCAMAR,MAAM,CAACG,QANP,+BAOMJ,KAAK,CAACF,KAAN,CAAYG,MAAM,CAACa,WAAnB,EAAgCR,KAAhC,CAAsC,CAAtC,EAAyCN,KAAK,CAACF,KAAN,CAAYG,MAAM,CAACa,WAAnB,EAAgCP,OAAhC,CAAwCN,MAAM,CAACQ,QAA/C,CAAzC,CAPN,sBAQMT,KAAK,CAACF,KAAN,CAAYG,MAAM,CAACa,WAAnB,EAAgCR,KAAhC,CAAsCN,KAAK,CAACF,KAAN,CAAYG,MAAM,CAACa,WAAnB,EAAgCP,OAAhC,CAAwCN,MAAM,CAACQ,QAA/C,IAAyD,CAA/F,CARN;AAFT;;AAcJ;AACI,aAAOT,KAAP;AA9CR;AAgDH,CAjDD;;AAmDA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    lists: {}\n};\n\nconst reducer = (state=initialState, action) =>{\n    switch(action.type){\n        case actionTypes.ADD_LIST:\n            return{\n                ...state,\n                lists: {\n                    ...state.lists, \n                    [action.listName]: []\n                }\n            };\n        case actionTypes.REMOVE_LIST:\n            return{\n                ...state,\n                lists:  [\n                    ...state.lists.slice(0, state.lists.indexOf(action.listName)),\n                    ...state.lists.slice(state.lists.indexOf(action.listName)+1)\n                ]\n            };\n        case actionTypes.ADD_CARD:\n            return{\n                ...state,\n                lists: {\n                    ...state.lists,\n                   [action.listName]: [\n                        ...state.lists[action.listName],\n                        action.cardName\n                   ]\n                }\n            };\n        case actionTypes.MOVE_CARD:\n            const updatedList = [...state[lists][action.listName]]\n            updatedList.splice(2, 0, action.cardName);\n            return{\n                ...state,\n                lists: {\n                    ...state.lists,\n                    [action.listName]: [\n                        ...state.lists[action.droppedList],\n                        action.cardName\n                    ],\n                    [action.listName]: [\n                        ...state.lists[action.currentList].slice(0, state.lists[action.currentList].indexOf(action.cardName)),\n                        ...state.lists[action.currentList].slice(state.lists[action.currentList].indexOf(action.cardName)+1)\n                    ]\n                }\n            };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}