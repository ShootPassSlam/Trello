{"version":3,"sources":["containers/CardDetail/InputComment/InputComment.module.css","containers/Board/Board.module.css","components/BoardTitle/BoardTitle.module.css","components/Topbar/Topbar.module.css","containers/Lists/Lists.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/Card/Card.module.css","containers/CardDetail/Comments/Comments.module.css","containers/CardDetail/CardDetail.module.css","containers/InputCard/InputCard.module.css","containers/InputList/InputList.module.css","components/BoardTitle/BoardTitle.js","components/Topbar/Topbar.js","components/Card/Card.js","containers/InputCard/InputCard.js","containers/List/List.js","shared/utility.js","store/actions/lists.js","store/actions/actionTypes.js","containers/InputList/InputList.js","containers/Lists/Lists.js","hoc/Aux.js","containers/Board/Board.js","containers/CardDetail/Description/Description.js","containers/CardDetail/InputComment/InputComment.js","containers/CardDetail/Comments/Comments.js","containers/CardDetail/CardDetail.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","App.js","serviceWorker.js","store/reducers/lists.js","index.js","containers/CardDetail/Description/Description.module.css","containers/List/List.module.css"],"names":["module","exports","commentFrame","commentBox","commentBoxInput","comments","commentsContainer","commentContainer","comment","buttons","closeButton","confirmationButtons","FormAcceptButton","Board","BoardTitle","Topbar","DesktopOnly","Lists","Modal","Backdrop","CardContainer","Card","CardDragging","NoCardsPlaceholderDragging","NoCardsPlaceholder","FormEdit","FormHidden","Edit","commentTitle","commentIcon","commentUserIcon","commentInfo","commentListItem","commentAuthor","commentAuthorIcon","commentDate","windowHeader","windowHeaderIcon","windowTitle","windowMain","windowSidebar","windowHeaderList","Close","gutter","InputCard","Buttons","FormCancelButton","Cancel","InputCardButton","InputList","InputListButton","boardTitle","props","react_default","a","createElement","className","styles","topbar","Types","state","isHovered","mouseIn","_this","setState","prevState","mouseOut","height","_this2","this","_this$props","id","title","isOver","connectDragSource","connectDropTarget","item","editIcon","classCard","originalCard","card","isEmptyList","ref","input","myElement","onMouseEnter","onMouseLeave","style","Link","to","pathname","concat","modal","textDecoration","color","Edit_default","fontSize","Component","DropTarget","canDrop","hover","monitor","getItem","hoverCardIndex","cardIndex","hoverListIndex","listIndex","_props$findCard2","findCard","draggedCardIndex","draggedListIndex","cardMove","connect","dropTarget","DragSource","beginDrag","originalCardIndex","originalListIndex","endDrag","_monitor$getItem","didDrop","_props$findCard","dragSource","isDragging","cardName","inputActive","handleChange","event","target","value","handleSubmit","preventDefault","createNewCard","inputActiveHandler","inputInactiveHandler","handleClickOutside","wrapperRef","contains","document","addEventListener","removeEventListener","inputRef","focus","formIsValid","length","listText","cards","form","node","onSubmit","inputEl","type","onChange","placeholder","disabled","onClick","Clear_default","List","findCardHandler","indexOf","connectDropTargetCard","isOverlocally","listCards","filter","ListDragging","displayCards","components_Card_Card","index","onCardMoved","map","key","listName","containers_InputCard_InputCard","onCardAdded","originalList","list","findList","listMove","drop","dispatch","listActions","onListAdded","listCounter","findListHandler","lists","displayLists","containers_List_List","text","onListMoved","containers_InputList_InputList","DragDropContext","HTML5Backend","newListIndex","aux","children","onInitBoards","Aux","containers_Lists_Lists","axios","all","get","then","spread","listsRes","cardsRes","counterRes","cardCounter","data","catch","error","Description","description","Subject_default","descriptionIcon","descriptionTitle","descriptionField","href","InputComment","commentText","newComment","onNewComment","cardId","onUpdateComment","commentIndex","handleDelete","select","Close_default","newCommentText","author","Comments","commentIds","commentId","find","user","charAt","Date","date","toLocaleString","undefined","day","month","year","hour","minute","CardDetail_InputComment_InputComment","onDeleteComment","List_default","CardDetail","match","params","Redirect","e","stopPropagation","history","goBack","Web_default","CardDetail_Comments_Comments","backdrop","show","clicked","transform","opacity","modalType","App","previousLocation","location","nextProps","action","isModal","Switch","Route","path","exact","component","render","UI_Modal_Modal","Object","assign","containers_Board_Board","Boolean","window","hostname","initialState","commentCounter","reducer","arguments","newList","objectSpread","toConsumableArray","newCard","newCards","splice","newLists","movingList","cardSwaps","forEach","updatedCards","updatedComment","now","newComments","slice","cardComments","composeEnhancers","compose","store","createStore","listReducer","applyMiddleware","thunk","app","es","BrowserRouter","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.66dfb439.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentFrame\":\"InputComment_commentFrame__3p9gA\",\"commentBox\":\"InputComment_commentBox__30yLY\",\"commentBoxInput\":\"InputComment_commentBoxInput__UB0NJ\",\"comments\":\"InputComment_comments__2N9jt\",\"commentsContainer\":\"InputComment_commentsContainer__1CC_A\",\"commentContainer\":\"InputComment_commentContainer__3I_eC\",\"comment\":\"InputComment_comment__nl1NT\",\"buttons\":\"InputComment_buttons__eHfnK\",\"closeButton\":\"InputComment_closeButton__2I-Kp\",\"confirmationButtons\":\"InputComment_confirmationButtons__38KYV\",\"FormAcceptButton\":\"InputComment_FormAcceptButton__AY_3s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Board\":\"Board_Board__2dZB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BoardTitle\":\"BoardTitle_BoardTitle__jGYQa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Topbar\":\"Topbar_Topbar__22Hhp\",\"DesktopOnly\":\"Topbar_DesktopOnly__2AfU4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Lists\":\"Lists_Lists__2XWHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2DBTJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1E053\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardContainer\":\"Card_CardContainer__3iUTY\",\"Card\":\"Card_Card__2a_e7\",\"CardDragging\":\"Card_CardDragging__wSZPd\",\"NoCardsPlaceholderDragging\":\"Card_NoCardsPlaceholderDragging__31-PY\",\"NoCardsPlaceholder\":\"Card_NoCardsPlaceholder__3v5hn\",\"FormEdit\":\"Card_FormEdit__3EFHm\",\"FormHidden\":\"Card_FormHidden__ruzNh\",\"Edit\":\"Card_Edit__T5s5d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentTitle\":\"Comments_commentTitle__170Jm\",\"commentsContainer\":\"Comments_commentsContainer__19dCd\",\"commentIcon\":\"Comments_commentIcon__2L1hw\",\"commentUserIcon\":\"Comments_commentUserIcon__2iu5V\",\"commentFrame\":\"Comments_commentFrame__1Fu2T\",\"commentBox\":\"Comments_commentBox__37K4B\",\"commentBoxInput\":\"Comments_commentBoxInput__1pVgG\",\"commentInfo\":\"Comments_commentInfo__2hx87\",\"commentListItem\":\"Comments_commentListItem__Qglm1\",\"commentAuthor\":\"Comments_commentAuthor__3x7VN\",\"commentAuthorIcon\":\"Comments_commentAuthorIcon__SILw2\",\"commentDate\":\"Comments_commentDate__e2ib8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"windowHeader\":\"CardDetail_windowHeader__3lrxU\",\"windowHeaderIcon\":\"CardDetail_windowHeaderIcon__3OcIM\",\"windowTitle\":\"CardDetail_windowTitle__qtCdE\",\"windowMain\":\"CardDetail_windowMain__255Hg\",\"windowSidebar\":\"CardDetail_windowSidebar__1ksKK\",\"windowHeaderList\":\"CardDetail_windowHeaderList__3tGeq\",\"closeButton\":\"CardDetail_closeButton__33bwD\",\"Close\":\"CardDetail_Close__o3m5C\",\"gutter\":\"CardDetail_gutter__CQh-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputCard\":\"InputCard_InputCard__2tRlx\",\"Buttons\":\"InputCard_Buttons__2bBg9\",\"FormAcceptButton\":\"InputCard_FormAcceptButton__GWtDZ\",\"FormCancelButton\":\"InputCard_FormCancelButton__1F_nA\",\"Cancel\":\"InputCard_Cancel__1DY4T\",\"InputCardButton\":\"InputCard_InputCardButton__3VExW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputList\":\"InputList_InputList__MCSBJ\",\"Buttons\":\"InputList_Buttons__yg6hW\",\"FormAcceptButton\":\"InputList_FormAcceptButton__KdJXD\",\"FormCancelButton\":\"InputList_FormCancelButton__Z6PLT\",\"Cancel\":\"InputList_Cancel__3WoYl\",\"InputListButton\":\"InputList_InputListButton__2DJDq\"};","import React from 'react';\nimport styles from './BoardTitle.module.css';\n\nconst boardTitle = (props) => (\n    <header className={styles.BoardTitle}>\n        Demo Board\n    </header>\n);\n\nexport default boardTitle;","import React from 'react';\nimport styles from './Topbar.module.css';\n\nconst topbar = (props) => (\n    <nav className={styles.Topbar}>\n        Trello\n    </nav>\n);\n\nexport default topbar;","import React, { Component } from 'react';\nimport { DragSource, DropTarget} from 'react-dnd'\nimport {Link} from 'react-router-dom';\n\nimport styles from './Card.module.css';\nimport Edit from '@material-ui/icons/Edit';\n\nconst Types = {\n    CARD: 'card'\n}\n\nconst cardSource = {\n    beginDrag(props) {\n        return {\n            originalCard: props.card,\n            originalCardIndex: props.cardIndex,\n            originalListIndex: props.listIndex\n        }\n    },\n\n    endDrag(props, monitor) {\n        const {originalCardIndex, originalListIndex, originalCard} = monitor.getItem()\n        const didDrop = monitor.didDrop()\n\n        if (!didDrop) {\n            const { card, draggedCardIndex, draggedListIndex } = props.findCard(originalCard)\n            props.cardMove(draggedListIndex, originalListIndex, draggedCardIndex, originalCardIndex, card)\n        }\n    },\n}\n\nconst cardTarget = {\n    canDrop() {\n        return false\n    },\n\n    hover(props, monitor) {\n        const { originalCard } = monitor.getItem()\n        const { cardIndex: hoverCardIndex, listIndex: hoverListIndex, card: hoverCard} = props\n\n        if (originalCard !== hoverCard) {\n            const { card, draggedCardIndex, draggedListIndex } = props.findCard(originalCard)\n            props.cardMove(draggedListIndex, hoverListIndex, draggedCardIndex, hoverCardIndex, card)\n        }\n    },\n}\n\nconst collectDrop = (connect, monitor) => {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        item: monitor.getItem()\n    }\n}\n\nconst collectDrag = (connect, monitor) =>{\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\nclass Card extends Component {\n\n    state = {\n        isHovered: false\n    }\n\n    mouseIn = () => {\n        this.setState( (prevState) => {return {isHovered: true};});\n    }\n\n    mouseOut = () => {\n        this.setState( (prevState) => {return {isHovered: false};});\n    }\n\n    render() {\n        const { id, title, isOver, connectDragSource, connectDropTarget, item} = this.props\n        let editIcon = (this.state.isHovered && !item) ? styles.FormEdit : styles.FormHidden;\n        let className = styles.CardContainer;\n        let classCard = styles.Card;\n        let height\n\n        if(item && item.originalCard === this.props.card && isOver){\n            className = styles.CardDragging\n            classCard = styles.CardDragging\n            height = 50\n            editIcon = styles.NoCardsPlaceholder\n        }\n\n        if(this.props.isEmptyList){\n            className=styles.NoCardsPlaceholder\n        }\n        if(this.props.isEmptyList && this.props.isOver){\n            className=styles.NoCardsPlaceholderDragging\n        }\n\n        return connectDragSource(\n            connectDropTarget(\n                <div \n                    className={className} \n                    ref={input => { this.myElement = input; }} \n                    onMouseEnter={this.mouseIn} \n                    onMouseLeave={this.mouseOut} \n                    style={{height}}>\n                    <Link\n                        to={{\n                            pathname: `/card/${id}`,\n                            state: { modal: true }\n                        }}\n                    style={{ textDecoration: 'none', color: 'black' }}>\n                        <div className={classCard}>{title}</div>\n                        <span className={editIcon}><Edit className={styles.Edit} style={{ fontSize: 20 }}/></span>\n                    </Link>\n                </div>)\n        )\n    }\n}\n\n\nexport default DropTarget(Types.CARD, cardTarget, collectDrop)(\n    DragSource(Types.CARD, cardSource, collectDrag)(Card) \n)","import React, {Component} from 'react';\n\nimport styles from './InputCard.module.css';\nimport Clear from '@material-ui/icons/Clear';\n\nclass InputCard extends Component{\n    state={\n        cardName: \"\",\n        inputActive: false\n    }\n\n    handleChange = event => {\n        this.setState({cardName: event.target.value});\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.createNewCard(this.state.cardName, this.props.listIndex);\n        this.setState({cardName: \"\"});\n    }\n\n    inputActiveHandler = () => {\n        this.setState({inputActive: true});\n    }\n\n    inputInactiveHandler = () => {\n        this.setState({inputActive: false});\n    }\n\n    handleClickOutside = (event) => {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.setState({inputActive: false});\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentDidUpdate(){\n        if(this.state.inputActive){\n            this.inputRef.focus();\n        }\n    }\n\n    render (){\n        const formIsValid = this.state.cardName.length > 0\n        const listText = this.props.cards ? '+ Add another card' : '+ Add a card';\n        let form  = (\n                <div ref={node => { this.wrapperRef = node; }} className={styles.InputCard}>\n                    <form onSubmit={this.handleSubmit}>\n                        <textarea ref={inputEl => { this.inputRef = inputEl; }} type=\"text\" value={this.state.cardName} onChange={this.handleChange} placeholder=\"Enter card title...\"/>\n                        <div className={styles.Buttons}>\n                            <button className={styles.FormAcceptButton} disabled={!formIsValid}>Add Card</button>\n                            <button className={styles.FormCancelButton} type=\"button\" onClick={this.inputInactiveHandler}><Clear className={styles.Cancel}/></button>\n                        </div>\n                    </form>\n                </div>   \n        );\n\n        if(!this.state.inputActive){\n            form = (\n                <button className={styles.InputCardButton} onClick={this.inputActiveHandler}>{listText}</button>\n            );\n        }\n\n        return form;\n    }\n}\n\nexport default InputCard;","import React, { Component } from 'react';\nimport { DragSource, DropTarget} from 'react-dnd'\nimport Card from '../../components/Card/Card'\nimport InputCard from '../InputCard/InputCard';\nimport styles from './List.module.css';\n\nimport { connect } from 'react-redux';\nimport * as listActions from '../../store/actions/lists';\n\nimport { findCardsOfList } from '../../shared/utility';\n\nconst Types = {\n    CARD: 'card',\n    LIST: 'lists'\n}\n\nconst cardTarget = {\n    drop() {}\n}\n\nconst collectDropCard = (connect, monitor) =>{\n    return {\n        connectDropTargetCard: connect.dropTarget(),\n        isOver: monitor.isOver()\n    }\n}\n\nconst listSource = {\n    beginDrag(props) {\n        return {\n            listIndex: props.listIndex,\n            originalList: props.list\n        }\n    },\n\n    endDrag(props, monitor) {\n    },\n}\n\nconst listTarget = {\n    canDrop() {\n        return false\n    },\n\n    hover(props, monitor) {\n        const { originalList} = monitor.getItem()\n        const { listIndex: hoverListIndex, list: hoverList} = props\n\n        if (originalList !== hoverList) {\n            const draggedListIndex = props.findList(originalList);\n            props.listMove(draggedListIndex, hoverListIndex);\n        }\n    },\n}\n\nconst collectDrop = (connect, monitor) => {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOverlocally: monitor.isOver()\n    }\n}\n\nconst collectDrag = (connect, monitor) =>{\n    return {\n        connectDragSource: connect.dragSource()\n    }\n}\n\nclass List extends Component{\n\n    findCardHandler = (card) => {\n        return {\n            card: card,\n            draggedCardIndex: this.props.cards.indexOf(card),\n            draggedListIndex: this.props.cards[this.props.cards.indexOf(card)].listIndex\n        }\n    };\n\n\n    render() {\n        const { connectDropTarget, connectDragSource, connectDropTargetCard, isOver, isOverlocally} = this.props\n        let listCards = findCardsOfList(this.props.cards, this.props.listIndex);\n        \n        let className = styles.List\n        if(isOverlocally){\n            className=styles.ListDragging\n        }\n\n        let displayCards = <Card\n                    id={\"NOID\"}\n                    index={0}\n                    listIndex={this.props.listIndex}\n                    findCard={this.findCardHandler}\n                    cardMove={this.props.onCardMoved}\n                    isEmptyList={true}\n                    isOver={isOver}\n                />;\n        if(listCards.length > 0){\n            displayCards = listCards.map( (card,key) => {\n                return <Card\n                    key={key}\n                    cardIndex={this.props.cards.indexOf(card)}\n                    listIndex={this.props.listIndex}\n                    id={card.id}\n                    title={card.title}\n                    card={card}\n                    findCard={this.findCardHandler}\n                    cardMove={this.props.onCardMoved}\n                    isEmptyList={false}\n                    isOver={isOver}\n                />;\n            })\n        }\n\n        return connectDragSource(\n            connectDropTarget(\n                connectDropTargetCard(\n                    <div className={className}>\n                        <header>{this.props.listName}</header>\n                        {displayCards}\n                        <InputCard createNewCard={this.props.onCardAdded} \n                            cards={this.props.cards} \n                            listIndex={this.props.listIndex}/>\n                    </div>\n                )\n            )    \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cards: state.cards,\n    };\n}\n\nconst mapDispatchToProps= dispatch => {\n    return {\n        onCardAdded: (cardName, listIndex) => dispatch(listActions.addCard(cardName, listIndex)),\n        onCardMoved: (draggedListIndex, hoverListIndex, draggedCardIndex, hoverCardIndex, card) => dispatch(listActions.moveCard(draggedListIndex, hoverListIndex, draggedCardIndex, hoverCardIndex, card))\n    }\n}\n\nexport default DropTarget(Types.LIST, listTarget, collectDrop)(\n    DragSource(Types.LIST, listSource, collectDrag)(\n        DropTarget(Types.CARD, cardTarget, collectDropCard)(\n            connect(mapStateToProps, mapDispatchToProps)(List)\n        )\n    )\n)","export const findCardsOfList = (cards, listIndex) => {\n    return cards.filter( card => card.listIndex === listIndex)\n};","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const addList = (name) =>{\n    return {\n        type: actionTypes.ADD_LIST,\n        listName: name\n    };\n};\n\nexport const addCard = (cardName, listIndex) =>{\n    return {\n        type: actionTypes.ADD_CARD,\n        listIndex: listIndex,\n        cardName: cardName\n    };\n};\n\nexport const moveCard = (draggedListIndex, hoverListIndex, draggedCardIndex, hoverCardIndex, card) => {\n    return {\n        type: actionTypes.MOVE_CARD,\n        draggedListIndex: draggedListIndex,\n        hoverListIndex: hoverListIndex,\n        draggedCardIndex: draggedCardIndex,\n        hoverCardIndex: hoverCardIndex,\n        card: card\n    };\n};\n\nexport const moveList = (originalListIndex, newListIndex) => {\n    return {\n        type: actionTypes.MOVE_LIST,\n        originalListIndex: originalListIndex,\n        newListIndex: newListIndex\n    };\n};\n\nexport const updateComment = (commentIndex, newCommentText) => {\n    return {\n        type: actionTypes.UPDATE_COMMENT,\n        commentIndex: commentIndex,\n        newCommentText: newCommentText\n    };\n};\n\nexport const deleteComment = (commentIndex, cardId) => {\n    return {\n        type: actionTypes.DELETE_COMMENT,\n        commentIndex: commentIndex,\n        cardId: cardId\n    };\n};\n\nexport const newComment = (commentText, author, cardId) => {\n    return {\n        type: actionTypes.ADD_COMMENT,\n        commentText: commentText,\n        author: author,\n        cardId: cardId\n    };\n};\n\nexport const setBoards = (lists, cards, listCounter, cardCounter) => {\n    return {\n        type: actionTypes.SET_BOARDS,\n        lists: lists,\n        cards: cards,\n        listCounter: listCounter,\n        cardCounter: cardCounter\n    };\n};\n\nexport const fetchBoardsFailed = () => {\n    return {\n        type: actionTypes.FETCH_BOARDS_FAILED\n    };\n};\n\nexport const initBoards = () => {\n    return dispatch => {\n        axios.all([\n            axios.get('https://trello-33445.firebaseio.com/lists.json'),\n            axios.get('https://trello-33445.firebaseio.com/cards.json'),\n            axios.get('https://trello-33445.firebaseio.com/counters.json'),\n        ])\n        .then(axios.spread((listsRes, cardsRes, counterRes) => {\n            dispatch(setBoards(\n                listsRes.data, \n                cardsRes.data,  \n                counterRes.data.listCounter, \n                counterRes.data.cardCounter\n            ));\n        }))\n        .catch(error=>{\n            dispatch(fetchBoardsFailed());\n        });\n    };\n};","export const ADD_LIST = \"ADD_LIST\";\nexport const ADD_CARD = \"ADD_CARD\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const MOVE_CARD = \"MOVE_CARD\";\nexport const MOVE_LIST = \"MOVE_LIST\";\nexport const UPDATE_COMMENT = \"UPDATE_COMMENT\";\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\n\nexport const SET_BOARDS = \"SET_BOARDS\";\nexport const FETCH_BOARDS_FAILED =  \"FETCH_BOARDS_FAILED\";","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as listActions from '../../store/actions/lists';\n\nimport styles from './InputList.module.css';\nimport Clear from '@material-ui/icons/Clear';\n\nclass InputList extends Component{\n    state={\n        listName: \"\",\n        inputActive: false\n    }\n\n    handleChange = event => {\n        this.setState({listName: event.target.value});\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.onListAdded(this.state.listName);\n        this.setState({listName: \"\"});\n    }\n\n    inputActiveHandler = () => {\n        this.setState({inputActive: true});\n    }\n\n    inputInactiveHandler = () => {\n        this.setState({inputActive: false});\n    }\n\n    handleClickOutside = (event) => {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.setState({inputActive: false});\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n    \n    componentDidUpdate(){\n        if(this.state.inputActive){\n            this.inputRef.focus();\n        }\n    }\n\n    render (){\n        const formIsValid = this.state.listName.length > 0\n        const listText = this.props.listCounter > 0 ? '+ Add another list' : '+ Add a list';\n        let form  = (\n                    <div ref={node => { this.wrapperRef = node; }} className={styles.InputList}>\n                        <form onSubmit={this.handleSubmit}>\n                            <input ref={inputEl => { this.inputRef = inputEl; }} type=\"text\" value={this.state.listName} onChange={this.handleChange} placeholder=\"Enter list title...\"/>\n                            <div className={styles.Buttons}>\n                                <button className={styles.FormAcceptButton} disabled={!formIsValid}>Add List</button>\n                                <button className={styles.FormCancelButton} type=\"button\" onClick={this.inputInactiveHandler}><Clear className={styles.Cancel}/></button>\n                            </div>\n                        </form>\n                    </div>\n            );\n\n        if(!this.state.inputActive){\n            form = (\n                <button className={styles.InputListButton} onClick={this.inputActiveHandler}>{listText}</button>\n            );\n        }\n        return form;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        listCounter: state.listCounter,\n    };\n}\n\nconst mapDispatchToProps= dispatch => {\n    return {\n        onListAdded: (listName) => dispatch(listActions.addList(listName)),\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(InputList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux'; \nimport * as listActions from '../../store/actions/lists';\n\nimport styles from './Lists.module.css';\nimport List from '../List/List';\nimport InputList from '../InputList/InputList';\n\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DragDropContext, DropTarget } from 'react-dnd';\n\nconst Types = {\n    LIST: 'lists'\n}\n\nconst listTarget = {\n    drop() {}\n}\n\nconst collectDropList = (connect, monitor) =>{\n    return {\n        connectDropTarget: connect.dropTarget()\n    }\n}\n\nclass Lists extends Component {\n\n    findListHandler = (list) => {\n        return this.props.lists.indexOf(list);\n    };\n\n    render(){\n        const { connectDropTarget} = this.props\n        const displayLists = this.props.lists.map( (list, key) => {\n                return <List \n                    key={key}\n                    listIndex={key}\n                    listName={list.text}\n                    list ={list}\n                    findList={this.findListHandler}\n                    listMove={this.props.onListMoved}\n                    />;\n            })\n\n        return connectDropTarget(\n            <div className={styles.Lists}>\n                {displayLists}\n                <InputList/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        lists: state.lists\n    };\n}\n\nconst mapDispatchToProps= dispatch => {\n    return {\n        onListMoved: (originalListIndex, newListIndex) => dispatch(listActions.moveList(originalListIndex, newListIndex))\n    }\n}\n\nexport default DragDropContext(HTML5Backend)(\n    DropTarget(Types.LIST, listTarget, collectDropList)(\n        connect(mapStateToProps, mapDispatchToProps)(Lists)\n    )\n)","const aux = (props) => props.children;\n\nexport default aux;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/lists';\n\nimport styles from './Board.module.css';\nimport BoardTitle from '../../components/BoardTitle/BoardTitle';\nimport Topbar from '../../components/Topbar/Topbar';\nimport Lists from '../Lists/Lists';\nimport Aux from '../../hoc/Aux';\n\nclass Board extends Component {\n    componentDidMount(){\n        this.props.onInitBoards();\n    }\n\n    render(){\n        return(\n        <Aux>\n            <Topbar />\n            <div className={styles.Board}>\n                <BoardTitle/>\n                <Lists/>\n            </div>\n        </Aux>    \n        );\n    }\n}\n\nconst mapDispatchToProps= dispatch => {\n    return {\n        onInitBoards: () => dispatch(actions.initBoards())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Board);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './Description.module.css';\n\nimport Subject from '@material-ui/icons/Subject';\n\nclass Description extends Component {\n\n    render(){\n        return(\n            <div className={styles.description}>\n                <span><Subject className={styles.descriptionIcon} style={{ fontSize: 24 }}/></span>\n                <div className={styles.descriptionTitle}>\n                    <h3>Description</h3>\n                </div>\n                <div>\n                    <button className={styles.descriptionField} href=\"#\">Add a more detailed description…</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        lists: state.lists,\n        cards: state.cards,\n        comments: state.comments\n    };\n}\n\nexport default connect(mapStateToProps)(Description);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as listActions from '../../../store/actions/lists';\nimport Aux from '../../../hoc/Aux';\n\nimport styles from './InputComment.module.css';\nimport Close from '@material-ui/icons/Close';\n\nclass InputComment extends Component{\n    state={\n        commentText: \"\",\n        inputActive: false\n    }\n\n    handleChange = event => {\n        this.setState({commentText: event.target.value});\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        if(this.props.newComment){\n            this.props.onNewComment(this.state.commentText, \"Placeholder\", this.props.cardId);\n        }else{\n            this.props.onUpdateComment(this.props.commentIndex, this.state.commentText);\n        }\n        this.setState({inputActive: false});\n    }\n\n    handleDelete = event => {\n        this.props.handleDelete(this.props.commentIndex, this.props.cardId)\n    }\n\n    inputActiveHandler = () => {\n        this.setState({inputActive: true},() => {\n            this.inputRef.select();\n        });\n    }\n\n    inputInactiveHandler = () => {\n        this.setState({inputActive: false});\n    }\n\n    handleClickOutside = (event) => {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.setState({inputActive: false});\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        if(!this.props.newComment){\n            this.setState({commentText: this.props.comment.text});\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    render (){\n        const formIsValid = this.state.commentText.length > 0\n        const placeholder = this.props.comment ? \"\": \"You haven't typed anything!\";\n        let form  = (\n                <div ref={node => { this.wrapperRef = node; }} className={styles.commentsContainer}>\n                    <form onSubmit={this.handleSubmit}>\n                        <div className={styles.commentFrame}>\n                            <div className={styles.commentBox}>\n                                <textarea ref={inputEl => { this.inputRef = inputEl; }} type=\"text\" className={styles.commentBoxInput} value={this.state.commentText} onChange={this.handleChange} placeholder={placeholder}/>\n                                <div className={styles.confirmationButtons}>\n                                    <button className={styles.FormAcceptButton} disabled={!formIsValid}>Save</button>\n                                    <button className={styles.closeButton} onClick={this.inputInactiveHandler}><Close className={styles.Close} style={{ fontSize: 26 }}/></button>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>   \n        );\n\n        if(!this.state.inputActive){\n            if(this.props.newComment){\n                form=(\n                    <form>\n                        <div className={styles.commentFrame}>\n                            <div className={styles.commentBox}>\n                                <textarea className={styles.commentBoxInput} placeholder=\"Write a comment…\" onClick={this.inputActiveHandler}></textarea>\n                            </div>\n                        </div>\n                    </form>\n                );\n            }else{\n                form = (\n                    <Aux>\n                        <div className={styles.commentContainer}>\n                            <div className={styles.comment}>{this.props.comment.text}</div>\n                        </div>\n                        <div className={styles.buttons}>\n                            <button onClick={this.inputActiveHandler}>Edit</button>\n                            <span>-</span>\n                            <button onClick={this.handleDelete}>Delete</button>\n                        </div>   \n                    </Aux>\n                );\n            }\n        }\n\n        return form;\n    }\n}\n\nconst mapDispatchToProps= dispatch => {\n    return {\n        onUpdateComment: (commentIndex, commentText) => dispatch(listActions.updateComment(commentIndex, commentText)),\n        onNewComment: (commentText, author, cardId) => dispatch(listActions.newComment(commentText, author, cardId)),\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(InputComment);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as listActions from '../../../store/actions/lists';\nimport styles from './Comments.module.css';\n\nimport InputComment  from '../InputComment/InputComment';\n\nimport List from '@material-ui/icons/List';\n\nclass Comments extends Component {\n\n    render(){\n        let comments = null;\n        if(this.props.commentIds){\n            comments = this.props.commentIds\n                .map( commentId => {\n                    let comment = this.props.comments.find( comment => comment.id === commentId);\n                    return (\n                        <li className={styles.commentListItem} key={commentId}>\n                            <div className={styles.commentAuthorIcon}>{comment.user.charAt(0)}</div>\n                            <div className={styles.commentInfo}>\n                                <span className={styles.commentAuthor}>{comment.user} </span>\n                                <span className={styles.commentDate}>\n                                    {new Date(comment.date).toLocaleString(undefined, {\n                                        day: 'numeric',\n                                        month: 'short',\n                                        year: 'numeric',\n                                        hour: '2-digit',\n                                        minute: '2-digit',\n                                    })}\n                                </span>\n                            </div>\n                            <InputComment \n                                comment={comment} \n                                commentIndex={this.props.comments.indexOf(comment)} \n                                cardId={this.props.cardId}\n                                handleDelete={this.props.onDeleteComment}\n                                newComment={false}/>\n                        </li>\n                    );\n                });\n        }\n\n        return( \n            <div>\n                <div className={styles.commentsContainer}>\n                    <span><List className={styles.commentIcon} style={{ fontSize: 24 }}/></span>\n                    <div className={styles.commentTitle}>\n                        <h3>Activity</h3>\n                    </div>\n                    <span className={styles.commentUserIcon}>P</span>\n                    <InputComment \n                        cardId={this.props.cardId}\n                        newComment={true}/>\n                </div>\n                <ul className={styles.comments}>\n                    {comments}\n                </ul>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        comments: state.comments\n    };\n}\n\nconst mapDispatchToProps= dispatch => {\n    return {\n        onDeleteComment: (commentIndex, cardId) => dispatch(listActions.deleteComment(commentIndex, cardId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport styles from './CardDetail.module.css';\n\nimport Aux from '../../hoc/Aux';\nimport Description from './Description/Description';\nimport Comments from './Comments/Comments';\n\nimport Web from '@material-ui/icons/Web';\nimport Close from '@material-ui/icons/Close';\n\nclass CardDetail extends Component {\n\n    render(){\n\n        let card = this.props.cards.find( card => card.id === this.props.match.params.id);\n        if(!card){\n            return <Redirect to=\"/\" />;  \n        }\n        let list = this.props.lists[card.listIndex];  \n\n        const back = e => {\n            e.stopPropagation();\n            this.props.history.goBack();\n        };\n\n        return(\n            <Aux>\n                <button className={styles.closeButton} onClick={back} href=\"#\"><Close className={styles.Close} style={{ fontSize: 26 }}/></button>\n                <div>\n                    <div className={styles.windowHeader}>\n                        <span><Web className={styles.windowHeaderIcon} style={{ fontSize: 24 }}/></span>\n                        <div className={styles.windowTitle}>\n                            <h2>{card.title}</h2>\n                        </div>\n                        <div className={styles.windowHeaderList}>\n                            in list <span>{list.text}</span>\n                        </div>\n                    </div>\n                    <div className={styles.windowMain}>\n                        <div className={styles.gutter}></div>\n\n                        <Comments commentIds={card.comments} cardId={card.id}/>\n                    </div>\n                    <div className={styles.windowSidebar} >\n                    </div>\n                </div>\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        lists: state.lists,\n        cards: state.cards\n    };\n}\n\nexport default connect(mapStateToProps)(CardDetail);","import React from 'react';\n\nimport styles from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={styles.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React, {Component} from 'react';\nimport styles from './Modal.module.css';\n\nimport Aux from '../../../hoc/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    render(){\n\n        const back = e => {\n            e.stopPropagation();\n            this.props.history.goBack();\n        };\n\n        return(\n            <Aux>\n                <Backdrop show = {true} clicked={back}/>\n                <div \n                    className = {styles.Modal}\n                    style={{\n                        transform: true ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: true ? '1' : '0'\n                    }}>\n                    <this.props.modalType {...this.props}/>\n                </div>\n            </Aux>\n        );\n    }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport './App.scss';\nimport {Route, Switch} from 'react-router-dom';\nimport Board from './containers/Board/Board';\nimport CardDetail from './containers/CardDetail/CardDetail';\nimport Modal from './components/UI/Modal/Modal';\n\nclass App extends Component {\n\n  previousLocation = this.props.location;\n\n  componentWillUpdate(nextProps) {\n    let { location } = this.props;\n\n    // set previousLocation if props.location is not modal\n    if (\n      nextProps.history.action !== \"POP\" &&\n      (!location.state || !location.state.modal)\n    ) {\n      this.previousLocation = this.props.location;\n    }\n  }\n\n  render() {\n    \n    let { location } = this.props;\n\n    let isModal = !!(\n      location.state &&\n      location.state.modal &&\n      this.previousLocation !== location\n    ); // not initial render\n\n\n    return (\n      <div className=\"App\">\n        <Switch location={isModal ? this.previousLocation : location}>\n            <Route path='/' exact component={Board} />\n            <Route path=\"/card/:id\" render={ props => [<Modal {...props} key={1} modalType={CardDetail}/>,<Board {...props} key={2}/>]}/>\n        </Switch>\n        {isModal ? <Route path=\"/card/:id\" render={ props => <Modal {...props} modalType={CardDetail}/>}/> : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    listCounter: 0,\n    cardCounter: 0,\n    commentCounter: 0,\n    lists: [],\n    cards:[],\n    comments:[],\n    error: false\n};\n\nconst reducer = (state=initialState, action) =>{\n    switch(action.type){\n        case actionTypes.ADD_LIST:\n            const newList = {text: action.listName};\n            return{\n                ...state,\n                listCounter: state.listCounter+1,\n                lists: [\n                    ...state.lists,\n                    newList\n                ]\n            };\n        case actionTypes.ADD_CARD:\n            const newCard = {\n                id:`card${state.cardCounter+1}`, \n                listIndex:action.listIndex, \n                title: action.cardName, \n                description:\"\", \n                comments:[]\n            }\n\n            return{\n                ...state,\n                cardCounter: state.cardCounter+1,\n                cards:[\n                    ...state.cards,\n                    newCard\n                ]\n            };\n        case actionTypes.MOVE_CARD:\n            let newCards = [\n                ...state.cards\n            ];\n            action.card.listIndex = action.hoverListIndex;\n            newCards.splice(action.draggedCardIndex,1);\n            newCards.splice(action.hoverCardIndex, 0, action.card);\n\n            return{\n                ...state,\n                cards: newCards\n            };\n        case actionTypes.MOVE_LIST:\n            let newLists = [\n                ...state.lists\n            ];\n\n            const movingList = newLists.splice(action.originalListIndex,1)[0];\n            newLists.splice(action.newListIndex, 0, movingList);\n            \n            let cardSwaps = {}\n            state.lists.forEach( (list, key) => {\n                if (list !== newLists[key]){\n                    cardSwaps[`${key}`]= newLists.indexOf(list);\n                }\n            });\n\n            const updatedCards = state.cards.map( card =>{\n                if(cardSwaps[card.listIndex]!== undefined){\n                    card.listIndex = cardSwaps[card.listIndex];\n                }\n                return card;\n            });\n\n            return{\n                ...state,\n                lists: [...newLists],\n                cards: updatedCards\n            };\n        case actionTypes.UPDATE_COMMENT:\n            let updatedComment = state.comments[action.commentIndex];\n            updatedComment.text = action.newCommentText\n            updatedComment.date = Date.now();\n            state.comments[action.commentIndex] = updatedComment;\n            return{\n                ...state,\n                comments:[\n                    ...state.comments\n                ]\n            };\n        case actionTypes.DELETE_COMMENT:\n            return{\n                ...state,\n                commentCounter: state.commentCounter-1,\n                cards:\n                    state.cards.map((card, index) => {\n                        if (card.id !== action.cardId) {\n                          return card\n                        }\n                        return {\n                            ...card,\n                            comments: card.comments.filter((comment, index) => {return comment !== state.comments[action.commentIndex].id})\n                        }\n                    }),\n                comments: state.comments.filter((item, index) => index !== action.commentIndex)\n            };\n        case actionTypes.ADD_COMMENT:\n            const newComment = { \n                id:`comment${state.commentCounter+1}`, \n                user: action.author, \n                text: action.commentText, \n                date: Date.now()\n            }\n            let newComments = state.comments.slice()\n            newComments.splice(state.commentCounter,0,newComment)\n\n            return{\n                ...state,\n                commentCounter: state.commentCounter+1,\n                cards:\n                    state.cards.map((card, index) => {\n                        if (card.id !== action.cardId) {\n                          return card\n                        }\n                        let cardComments = card.comments.slice()\n                        cardComments.splice(cardComments.length,0,newComment.id)\n                        return {\n                            ...card,\n                            comments: cardComments\n                        }\n                    }),\n                comments: newComments\n            }\n         case actionTypes.SET_BOARDS:\n            return{\n                ...state,\n                lists: action.lists,\n                cards: action.cards,\n                listCounter: action.listCounter,\n                cardCounter: action.cardCounter,\n            }\n        case actionTypes.FETCH_BOARDS_FAILED:\n\n            return {\n                ...state,\n                error: true\n            }\n        default:\n            return state;   \n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware, compose } from 'redux';\nimport listReducer from './store/reducers/lists';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = process.env.NODE_ENV ==='development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst store = createStore(\n    listReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <Route component={App} />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionTitle\":\"Description_descriptionTitle__2Jv7O\",\"description\":\"Description_description__1Zw7m\",\"descriptionIcon\":\"Description_descriptionIcon__VOIdy\",\"descriptionField\":\"Description_descriptionField__m_E3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List_List__xoNiv\",\"ListDragging\":\"List_ListDragging__1B8M-\"};"],"sourceRoot":""}